[{"path":"index.html","id":"how-to-use-this-ebook","chapter":"How to use this eBook","heading":"How to use this eBook","text":"Welcome Concepts & Applications Spatial Epidemiology (EPI 563) Fall 2021 Semester! eBook one several sources information support progress semester. overview course, expectations, learning objectives, assignments, grading, please review full course syllabus Canvas. eBook serves provide ‘jumping point’ content covered week. Specifically, content herein introduce key themes, new vocabulary, provide additional detail complementary asynchronous (pre-recorded) video lectures, foundational synchronous (class) work.","code":""},{"path":"index.html","id":"strategy-for-using-this-ebook","chapter":"How to use this eBook","heading":"Strategy for using this eBook","text":"separate module chapter week’s content. general, content within week’s section divided two sections focusing spatial thinking spatial analysis. dichotomy always hold, broad terms can expect sections specific content class Tuesday versus Thursday respectively.Spatial thinking epidemiology: section introduces vocabulary, concepts, themes important incorporation spatialized geo-referenced data epidemiologic work. minimum, plan read content prior class Tuesday, although likely benefit reading sections Tuesday.Spatial analysis epidemiology: section focused data management, visualization, spatial statistics, interpretation. content relevant work together Tuesday’s, essential successful work Thursday lab activities.Throughout book concepts ideas may highlighted call-blocks.block denotes potential pitfall area caution.block denotes additional bit information additional idea note topic hand.block denotes tip advice best practices efficiency.Please note continually updating eBook throughout semester, choose download, please double-check Last updated date (colored bar bottom screen) sure recent version.\neBook licensed Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.","code":""},{"path":"software-installation.html","id":"software-installation","chapter":"Software installation","heading":"Software installation","text":"information module follows pre-class video setting R RStudio computer.","code":""},{"path":"software-installation.html","id":"installing-r-on-your-computer","chapter":"Software installation","heading":"Installing R on your computer","text":"August 2021, --date version R 4.1.1. R Project Statistical Computing continually working update improve R, result new versions 1-2 times per year.already R installed, can open console check current version : R.Version()$version.stringIf R older version listed , can install R going R repository: https://www.r-project.org/. Note many ‘mirrors’ servers software stored. Generally wise select one geographically close , although work theory. One mirror relatively close Atlanta : http://archive.linux.duke.edu/cran/","code":""},{"path":"software-installation.html","id":"installing-rstudio-on-your-computer","chapter":"Software installation","heading":"Installing RStudio on your computer","text":"R-Studio one several integrated development environments (IDE) working R. means wrapper around core R functionality makes coding project work R much easier without. develop projects analyses using R within IDE R-Studio. Using R-Studio lets us robust code-editing debugging, code syntax highlighting (e.g. coloring different words according use, identifying possible errors), assistance file management, working larger projects, outputting results.current version RStudio 1.4.1717. RStudio version older 1.2 please install/update.INSTALL: go https://www.rstudio.com/products/rstudio/download/UPDATE: Open RStudio go Help Menu choose ‘Check Updates’R-Studio Cheatsheat provides quick reference guide many ways R-Studio makes work R easier.","code":""},{"path":"installing-packages-for-this-course.html","id":"installing-packages-for-this-course","chapter":"Installing packages for this course","heading":"Installing packages for this course","text":"base R great deal essential functionality, power R comes rapidly growing list user-created contributed ‘packages.’ package simply bundle functions tools, sometimes also including example datasets, basic documentation, even tutorial ‘vignettes.’ can see official R packages going : https://cran.r-project.org/web/packages/.common way install package R install.packages() command. instance install package ggplot2 :install.packages(\"ggplot2\")Remember need install package (although may update packages occasionally – see green Update button Packages tab R Studio). want actually use package (example ggplot2) call like :library(ggplot2)call library() working, nothing visible happens. However see errors, might package date (thus needs updated/reinstalled), important dependencies missing. Dependencies packages package depends. Typically installed default, sometimes something missing. , simply install missing package try calling library(ggplot2) .Notice function install.packages('yourPackage') must use quotes around package name. contrast function library(youPackage) use quotes.submit installation request, note output R console. get warning says installation possible missing package ‘namespace’, suggests missing dependency (e.g. something main package needs work correctly). Try installing package mentioned error. trouble, reach TA’s!","code":""},{"path":"installing-packages-for-this-course.html","id":"installing-rtools40-windows-only","chapter":"Installing packages for this course","heading":"Installing Rtools40 (Windows Only)","text":"packages can installed mentioned (e.g. using install.packages()), instances installation requires complex ‘unpacking’ course code installation github. Mac OS Unix capability , Windows machine may require additional tools. Luckily package ! called Rtools40, install install packages .running Windows, navigate website: https://cran.r-project.org/bin/windows/Rtools/ follow instructions.","code":""},{"path":"installing-packages-for-this-course.html","id":"installing-packages-used-for-general-data-science","chapter":"Installing packages for this course","heading":"Installing packages used for general data science","text":"rest page, copy paste provided code order install packages necessary course. Notice hover right code-chunk html version eBook, see copy icon quick copying pasting.Although copying pasting code, take moment look output. get error messages package install? , re-check code try .packages support general work R:rmarkdown allows creation mixed output documents combine code, documentation results single, readable format.packages tinytex knitr necessary creating R documents including PDF output required submitting assignments.use many data manipulation tools tidyverse. can learn tidyverse : https://tidyverse.tidyverse.org/, can see applications tidyverse packages R Epidemiologists Handbook. tidyverse actually collection data science tools including visualization/plotting package ggplot2 data manipulation package dplyr. reason, install.packages('tidyverse') , actually installing multiple packages!packages pacman utilities help simplify file pathnames package loading behavior.","code":"\ninstall.packages('tidyverse')   \ninstall.packages(c('pacman', 'here'))\ninstall.packages(c('tinytex', 'rmarkdown', 'knitr')) \ntinytex::install_tinytex()  \n# this function installs the tinytex LaTex on your\n#  computer which is necessary for rendering (creating) PDF's "},{"path":"installing-packages-for-this-course.html","id":"installing-packages-use-for-geographic-data","chapter":"Installing packages for this course","heading":"Installing packages use for geographic data","text":"many ways get data want spatial epidemiology R. often (don’t always) use census geographies aggregating units, census populations denominators, following packages useful. designed quickly extract geographic boundary files (e.g. ‘shapefiles’) well attribute data US Census website via API. NOTE: work request free Census API key. Notice help() function get instructions .","code":"\ninstall.packages(c('tidycensus','tigris')) \n\nhelp('census_api_key','tidycensus')"},{"path":"installing-packages-for-this-course.html","id":"installing-packages-used-for-spatial-data-manipulation-visualization","chapter":"Installing packages for this course","heading":"Installing packages used for spatial data manipulation & visualization","text":"section installs set tools specific goals importing, exporting, manipulating, visualizing, analyzing spatial data.first line packages functions defining, importing, exporting, manipulating spatial data.second line tools use visualizing spatial data (e.g. making maps!).","code":"\ninstall.packages(c('sp', 'sf', 'rgdal', 'raster', 'RColorBrewer', 'rgeos', 'maptools', 'OpenStreetMap'))  \ninstall.packages(c('tmap', 'tmaptools', 'ggmap', 'shinyjs', 'shiny', 'micromap')) "},{"path":"installing-packages-for-this-course.html","id":"installing-packages-used-for-spatial-analysis","chapter":"Installing packages for this course","heading":"Installing packages used for spatial analysis","text":"Finally packages specifically spatial analysis tasks ’ll carry .","code":"\ninstall.packages(c('spdep', 'CARBayes', 'sparr', 'spatialreg',  'DCluster', 'SpatialEpi'))\ninstall.packages(c('GWmodel', 'spgwr') )"},{"path":"locating-spatial-epidemiology.html","id":"locating-spatial-epidemiology","chapter":"Week 1 Locating Spatial Epidemiology","heading":"Week 1 Locating Spatial Epidemiology","text":"","code":""},{"path":"locating-spatial-epidemiology.html","id":"getting-ready","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.1 Getting Ready","text":"","code":""},{"path":"locating-spatial-epidemiology.html","id":"learning-objectives","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.1.1 Learning objectives","text":"TABLE 1.1:  Learning objectives weekly module","code":""},{"path":"locating-spatial-epidemiology.html","id":"additional-resources","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.1.2 Additional Resources","text":"Geocomputation R Robin Lovelace. recurring ‘additional resource’ provides lots useful insight strategy working spatial data R. encourage browse quickly now, return often questions handle geographic data (especially class sf) R.basic introduction ggplot2 package. just one dozens great online resources introducing grammar graphics approach plotting R.basic introduction tmap package also one many introductions tmap mapping package. tmap builds grammar graphics philosophy ggplot2, brings lot tools useful thematic mapping!R SAS users cheat sheet","code":""},{"path":"locating-spatial-epidemiology.html","id":"important-vocabulary","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.1.3 Important Vocabulary","text":"TABLE 1.2:  Vocabulary Week 1","code":""},{"path":"locating-spatial-epidemiology.html","id":"spatial-thinking-in-epidemiology","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.2 Spatial Thinking in Epidemiology","text":"first learning epidemiology, can difficult distinguish concepts, theories, purpose epidemiology versus skills, tools, methods use implement epidemiology. distinctions foundational collective professional identity, way go work. instance think epidemiologists data analysts, scientists, data scientists, technicians something else? questions bigger can address class, importance becomes especially apparent learning area spatial epidemiology. tendency discourse spatial epidemiology focus primarily data methods without understanding relate scientific questions health population ultimately responsible. Distinguishing threads overarching goal course, even learn data science spatial analytic tools.One quite simplistic important example questions methods inter-related apparent think data. Data central quantitative analysis, including epidemiologic analysis. data different spatial epidemiology?first thing might come mind explicitly geographic spatial measures contained within data. content spatial data distinct: addition geographic spatial location may illuminate otherwise aspatial attributes. even fundamental content thinking unit analysis.likely many examples epidemiology coursework, explicit (sometimes implicit) unit analysis individual person. Spatial epidemiology can definitely align individual-level analysis. ’ll see, common units observe measure spatial epidemiology – therefore units compose much data – individuals instead geographic units (e.g. census tract, county, state, etc) extension collection aggregation individuals therein. distinction unit analysis important implications epidemiologic concerns including precision, bias, ultimately inference (e.g. meaning can make analysis), ’ll discuss throughout semester.One concrete implication discussion always able answer basic question dataset wish analyze: “one row data represent?” row data one way think unit analysis, often (always) spatial epidemiology row data summary population contained geographic unit boundary. Said another way ecologic summary population. stated , simplistic example important learn spatial statistics methods, also maintain perspective epidemiology population health science. advance public health need good methods also need critical understanding populations support, data analyze, conclusions can reliably draw work.move semester, encourage dig deep methods work, also step back ask questions like “choose method?” “question epidemiology useful ?”","code":""},{"path":"locating-spatial-epidemiology.html","id":"spatial-analysis-in-epidemiology","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.3 Spatial Analysis in Epidemiology","text":"","code":""},{"path":"locating-spatial-epidemiology.html","id":"spatial-data-storage-formats","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.3.1 Spatial data storage formats","text":"worked spatial GIS data using ESRI’s ArcMap, familiar called shapefiles. one common format storing geographic data computers. ESRI shapefiles actually single file, anywhere four eight different files file name different extensions (e.g. .shp, .prj, .shx, etc). different file (corresponding extension) contains different portion data ranging geometry data, attribute data, projection data, index connecting together, etc.may know shapefiles (opinion definitely best) way store geographic data. class recommend storing data format called geopackages indicated .gpkg extension. Geopackages open source format developed functional mobile devices. useful storing individual files efficient compact way. clear, many formats make claim geopackages ultimate format; just happen meet needs course, much work spatial epidemiologists. worth noting many GIS programs including ArcMap QGIS can read write geopackage format; constraint limitation terms software data stored .gpkg format.","code":""},{"path":"locating-spatial-epidemiology.html","id":"representing-spatial-data-in-r","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.3.2 Representing spatial data in R","text":"work course assumes basic R user; need expert, assume understand data objects (e.g. data.frame, list, vector), basic operations including subsetting index (e.g. using square brackets extract modify information: []), base-R plotting, simple modeling. familiar R, need quick self-directed learning.good online resources R skills, instructor TA’s can point additional resources needed:Epidemiologist R HandbookR Data Science, particularly introductory chaptersR TutorialJust conceptualization , thinking data spatial epidemiology requires reflection, actual structure representation data computer tool R also requires attention. Specifically, spatial data R exactly like conventional aspatial epidemiologic data often arranged rectangular data.frame (e.g. like spreadsheet rows observations columns variables). spatial data complex just spreadsheet, need complex spatial data software platforms like ESRI’s ArcMap.spatial, dataset must representation geography, spatial location, spatial relatedness, commonly done either vector raster data model (see description vocabulary). spatial geographic representations must stored computer /held memory, hopefully means relating associating individual locations corresponding attributes. example want know attribute (e.g. count deaths given place), location place, ideally want two connected together.past 10+ years, R increasingly used analyze visualize spatial data. Early , investigators tackling complexities spatial data analysis R developed number ad hoc, one-approaches data. worked short term specific applications, created new problems users needed generalize method new situation, chain together steps. settings uncommon convert dataset multiple different formats accomplish task sequence; resulted convoluted error-prone coding, lack transparency analysis.eventual response early tumult thoughtful systematic approach defining class data tackled unique challenges spatial data R. Roger Bivand, Edzer Pebesma others developed sp package defined spatial data classes, provided functional tools interact . sp package defined specific data classes hold points, lines, polygons, well raster/grid data; data classes can contain geometry (names like SpatialPoints SpatialPolygons) contain geometry plus related data attributes (names like SPatialPointsDataFrame SpatialPolygonsDataFrame). spatial object can contain information spatial data might include: spatial extent (min/max x, y values), coordinate system spatial projection, geometry information, attribute information, etc.flexibility power sp* class objects, became standard last years. Interestingly, perhaps sophistication sp* class began undermine . sp* class data well-designed programming point view, still little cumbersome (frankly confusing) applied analysts new users. Analysis spatial epidemiology primarily computer programming, producing transparent reliable data pipelines conduct valid, reliable, reproducible analysis. Thus epidemiologists, data scientists, desired spatial tools incorporated growing toolbox data science tools R.calls user-friendly intuitive approach spatial data led team (e.g. Bivand, Pebesma, others) develop Simple Features set spatial data classes R. Loaded sf package, data format quickly become standard handling spatial data R. power sf class, discussed , makes spatial data behave like rectangular data thus makes amenable manipulation using tool works data.frame tibble objects. Recognizing many users functions prefer older sp* objects, sf package includes number utility functions easily converting back forth.class use sf* class objects preferred data class, tools ’ll learn still require sp* occasionally go back forth.sf* data classes designed hold essential spatial information (projection, extent, geometry), easy evaluate data.frame format integrates attribute information geometry information together. result intuitive sorting, selecting, aggregating, visualizing.","code":""},{"path":"locating-spatial-epidemiology.html","id":"benefits-of-sf-data-classes","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.3.3 Benefits of sf data classes","text":"Robin Lovelace writes online eBook, Gecomputation R, sf data classes offer approach spatial data compatible QGIS PostGIS, important non-ESRI open source GIS platforms, sf functionality compared sp provides:Fast reading writing dataEnhanced plotting performancesf objects can treated data frames operationssf functions can combined using %>% pipe operator works well tidyverse collection R packages (see Tips using dplyr examples)sf function names relatively consistent intuitive (begin st_)","code":""},{"path":"locating-spatial-epidemiology.html","id":"working-with-spatial-data-in-r","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.3.4 Working with spatial data in R","text":"lab, one example dataset use, called ga.mvc quantifies counts rates death motor vehicle crashes Georgia’s \\(n=159\\) counties. dataset vector represents counties polygons associated attributes (e.g. mortality information, county names, etc).","code":""},{"path":"locating-spatial-epidemiology.html","id":"importing-spatial-data-into-r","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.3.4.1 Importing spatial data into R","text":"important distinguish two kinds data formats. way data stored computer hard drive, way data organized managed inside program like R. shapefiles (.shp) popularized ESRI/ArcMap example format storing spatial data hard drive. contrast, discussion sf* sp* data classes refer data organized inside R.Luckily, regardless data stored computer, possible import almost format R, inside R possible make either sp* sf* data class. means receive data .shp shapefile, .gpkg geopackage, .tif raster file, can easily imported.sf functions act spatial objects begin prefix st_. Therefore import (read) data use st_read(). function determines import data based extension file name specify. Look help documentation st_read(). Notice first argument dsn=, might complete file name (e.g. myData.shp), might folder name (e.g. mygeodatabase.gdb). motor vehicle crash data saved shapefile (mvc.shp, actually six different files computer), geopackage (mvc.gpkg) can read like :can take look defined data class imported objects within R:Notice two objects class (e.g. type data stored within R), even though two different kinds files stored computer: one shapefile one geopackage. st_read() can automatically detect storage format based extension, use appropriate interpreter import data. nice means can bring many types spatial data R!also notice examined class() object, classified sf data.frame class. incredibly important, speaks elegant simplicity sf* data classes! classified sf perhaps obvious spatial object; fact object also classified data.frame means can treat object purposes data management, manipulation analysis relatively simple-seeming object: rectangular data.frame. work? explore lab essentially dataset rows (observations) columns (variables).can see variable/column names like :can see dataset attribute variables (e.g. GEOID, NAME, MVCRATE_17), final column called geometry one called geom another.geometry columns different usual run---mill column variables don’t hold single value. Instead, ‘cell’ columns actually contains embedded list \\(x,y\\) coordinates defining vertices polygons Georgia’s counties. spatial location information row contained single variable called geom (alternately, geometry).Another way learn sf object use head() function. addition displaying top rows data (typical behavior head() function), sf objects head() also print important metadata file.summarize, sf within R powerful :limited data arrive us. acquire data (web, colleague, etc) shapefile, geopackage, raster formats, can imported R.inside R (stored sf data objects), can treat datasets almost aspatial, rectangular datasets. means use subsetting, filtering, recoding, merging, aggregating without losing spatial information!","code":"\n# this is the shapefile\nmvc.a <- st_read('GA_MVC/ga_mvc.shp')\n\n# this is the geopackage\nmvc.b <- st_read('GA_MVC/ga_mvc.gpkg')\nclass(mvc.a)## [1] \"sf\"         \"data.frame\"\nclass(mvc.b)## [1] \"sf\"         \"data.frame\"\nnames(mvc.a)## [1] \"GEOID\"      \"NAME\"       \"MVCRATE_17\" \"geometry\"\nnames(mvc.b)## [1] \"GEOID\"      \"NAME\"       \"MVCRATE_17\" \"geom\"\nhead(mvc.a)## Simple feature collection with 6 features and 3 fields\n## Geometry type: MULTIPOLYGON\n## Dimension:     XY\n## Bounding box:  xmin: -84.64195 ymin: 31.0784 xmax: -82.04858 ymax: 34.49172\n## Geodetic CRS:  WGS 84\n##   GEOID                     NAME MVCRATE_17                       geometry\n## 1 13001  Appling County, Georgia   53.99276 MULTIPOLYGON (((-82.55069 3...\n## 2 13003 Atkinson County, Georgia   35.96260 MULTIPOLYGON (((-83.141 31....\n## 3 13005    Bacon County, Georgia    0.00000 MULTIPOLYGON (((-82.62819 3...\n## 4 13007    Baker County, Georgia   31.25000 MULTIPOLYGON (((-84.64166 3...\n## 5 13009  Baldwin County, Georgia   28.94936 MULTIPOLYGON (((-83.42674 3...\n## 6 13011    Banks County, Georgia   32.19921 MULTIPOLYGON (((-83.66862 3..."},{"path":"locating-spatial-epidemiology.html","id":"exporting-spatial-data-from-r","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.3.4.2 Exporting spatial data from R","text":"importing often primary challenge spatial data R, uncommon might modify alter spatial dataset wish save future use, write disk share colleague. Luckily sf package functionality write sf spatial object disk wide variety formats including shapefiles (.shp) geopackages (.gpkg). , R uses extension specify filename determine target format.","code":"\n# Write the file mvc to disk as a shapefile format\nst_write(mvc, 'GA_MVC/ga_mvc_v2.shp')\n\n# Write the file mvc to disk as a geopackage format\nst_write(mvc, 'GA_MVC/ga_mvc_v2.gpkg')"},{"path":"locating-spatial-epidemiology.html","id":"basic-visual-inspectionplots","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.3.5 Basic visual inspection/plots","text":"want see spatial data? base-R powerful function called plot() can used create easy incredibly complex visualizations graphical representation data. package sf, functionality plot() extended handle uniqueness spatial data. means call plot() spatial object without loaded sf, results different plot() called loading sf.plot() sf, default try make map every variable data frame! Try . want (usually ), can force plot variables providing vector variable names.Sometimes want know something spatial size, extent, shape data. can easily plot geometry spatial object (e.g. attributes). two approaches quickly plot geometry:","code":"\nplot(mvc) # this plots a panel for every column - or actually the first 10 columns## Warning: plotting the first 9 out of 17 attributes; use max.plot = 17 to plot\n## all\nplot(mvc['MVCRATE_05']) # this plots only a single variable, the MVC mortality rate for 2005\nplot(mvc[c('MVCRATE_05', 'MVCRATE_17')]) # this plots two variables: MVC rate in 2005 & 2017\nplot(st_geometry(mvc)) # st_geometry() returns the geom information to plot\nplot(mvc$geom)  # this is an alternative approach...directly plot the 'geom' column"},{"path":"locating-spatial-epidemiology.html","id":"working-with-crs-and-projection","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.3.6 Working with CRS and projection","text":"Maps used describe geographical spatial location particular objects representation things planet Earth. maps printed paper screens. words, maps identify locations somewhere planet earth represent flat.world latitude longitude lines painted ground, earth flat! Instead earth nearly spherical (really geoid) universal reference start measuring.two reasons, maps require minimum coordinate reference system (CRS) define numbers coordinates relate actual places. addition maps best interpreted formally projecting data account artifact induced pretending earth flat.unambiguous way describe CRS /projection using EPSG code, stands European Petroleum Survey Group. consortium standardized hundreds projection definitions manner adopted several R packages including rgdal sf.given dataset already CRS (possibly projection). CRS projection information contained original file imported, usually maintained use st_read(). However sometimes missing must first find . known, might choose change transform CRS projection specific purpose. discuss class.CRS information imported critical find CRS information data source!course GIS course (e.g. assumed already exposure geographic information systems generally), learning theory application coordinate reference systems projections primary purpose semester. However basic knowledge necessary successfully working spatial epidemiologic data. several resources peruse learn CRS, projections, EPSG codes:useful overview/review coordinate reference systems RRobin Lovelace’s Geocompuation R projections sfEPSG website: link searchable database valid ESPG codesHere useful EPSG codes\nFIGURE 1.1: Comparing CRS\nchoice CRS /projection substantial impact rendered map looks, evident figure (source image).already saw CRS/projection information mvc object used head() function ; top read WGS 84.Recall two main types CRS: purely geographic say coordinate locations represented latitude longitude degrees; projected means coordinate values transformed representation spherical geoid onto planar (Euclidean) coordinate system. WGS 84 ubiquitous geographic coordinate system common boundary files retrieved U.S. Census bureau.important question work spatial dataset understand whether primarily geographic projected CRS, one.quick logical test returns TRUE FALSE answer question “sf object simply longitude/latitude geographic CRS?”. answer case TRUE WGS 84 geographic (longlat) coordinate system. FALSE wanted know CRS/projection?somewhat complicated looking output summary CRS stored spatial object. two things note output:top, User input WGS 84At bottom section labeled GEOGCRS says ID[\"EPSG\",4326\"]literally hundreds distinct EPSG codes describing different geographic projected coordinate systems, semester three worth remembering:EPSG: 4326 common geographic (unprojected long-lat) CRSEPSG: 3857 also called WGS 84/Web Mercator, dominant projection used Google MapsEPSG: 5070 code projected CRS called Albers Equal Area benefit representing visual area maps equal manner.One rule thumb determine data degrees lat/long versus linear units meters miles look xmin, ymin, xmax, ymax printed top output whenever use head(xxx). Degrees latitude (y-axis values) range \\(-90^\\circ\\) \\(+90^\\circ\\), degrees longitude (x-axis values) range \\(0^\\circ\\) \\(180^\\circ\\).contrast projected data cartesian linear units (rather degrees), usually numbers much higher 180.CRS/projection clearly defined, may choose transform project data different system. sf package another handy function called st_transform() takes spatial object (dtaaset) one CRS outputs object transformed new CRS.see difference three? Although EPSG 4326 unprojected EPSG 3857 projected (e.g. Mercator conical projection), appear similar, although identical. Mercator projection known increased distortion equator. general prefer use ‘projected’ rather ‘unprojected’ (long/lat ) data visualization analysis, specifically almost always prefer equal area projections choropleth maps, coloring area represented communicates something intensity measure.Whenever bring new dataset need check CRS project transform needed.Important: important distinguish defining current projection data act projecting transforming data one known system new CRS/projection.transform data correctly define current original CRS/projection status. function tells us current status . cases data associated CRS information might completely blank (instance read numerical \\(x,y\\) points geocoding GPS process). cases can set underlying CRS using st_set_crs() define , assumes know . two arguments function: first x = objectName, second value = xxx ‘xxx’ valid EPSG code.","code":"\nst_is_longlat(mvc)## [1] TRUE\nst_crs(mvc)## Coordinate Reference System:\n##   User input: WGS 84 \n##   wkt:\n## GEOGCRS[\"WGS 84\",\n##     DATUM[\"World Geodetic System 1984\",\n##         ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n##             LENGTHUNIT[\"metre\",1]]],\n##     PRIMEM[\"Greenwich\",0,\n##         ANGLEUNIT[\"degree\",0.0174532925199433]],\n##     CS[ellipsoidal,2],\n##         AXIS[\"geodetic latitude (Lat)\",north,\n##             ORDER[1],\n##             ANGLEUNIT[\"degree\",0.0174532925199433]],\n##         AXIS[\"geodetic longitude (Lon)\",east,\n##             ORDER[2],\n##             ANGLEUNIT[\"degree\",0.0174532925199433]],\n##     USAGE[\n##         SCOPE[\"Horizontal component of 3D system.\"],\n##         AREA[\"World.\"],\n##         BBOX[-90,-180,90,180]],\n##     ID[\"EPSG\",4326]]\n# This uses the Albers equal area USA, \nmvc.aea <- st_transform(mvc, 5070)\n\n# This uses the Web Mercator CRS (EPSG 3857) which is just barely different from EPSG 4326\nmvc.wm <- st_transform(mvc, 3857)\n\n# Now let's look at them side-by-side\nplot(st_geometry(mvc), main = 'EPSG 4326')\nplot(st_geometry(mvc.wm), main = 'Web Mercator (3857)')\nplot(st_geometry(mvc.aea), main = 'Albers Equal Area (5070)')"},{"path":"cartography-for-epidemiology-i.html","id":"cartography-for-epidemiology-i","chapter":"Week 2 Cartography for Epidemiology I","heading":"Week 2 Cartography for Epidemiology I","text":"","code":""},{"path":"cartography-for-epidemiology-i.html","id":"getting-ready-1","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.1 Getting Ready","text":"","code":""},{"path":"cartography-for-epidemiology-i.html","id":"learning-objectives-1","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.1.1 Learning objectives","text":"TABLE 1.1:  Learning objectives weekly module","code":""},{"path":"cartography-for-epidemiology-i.html","id":"additional-resources-1","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.1.2 Additional Resources","text":"CDC Guidance Cartography Public Health Data (complements required reading)Maps LieColor Brewer Website color guidance choropleth mapsAnalyzing US Census Data: Methods, Maps, Models R","code":""},{"path":"cartography-for-epidemiology-i.html","id":"important-vocabulary-1","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.1.3 Important Vocabulary","text":"TABLE 1.2:  Vocabulary Week 2","code":""},{"path":"cartography-for-epidemiology-i.html","id":"spatial-thinking-in-epidemiology-1","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.2 Spatial Thinking in Epidemiology","text":"Making pretty maps full extent spatial epidemiology. However, epidemiologic cartography can sometimes beginning end spatial epidemiology given purpose. even epidemiologic analysis goes well beyond mapping (perhaps incorporate aspatial analysis, incorporate sophisticated spatial analysis), ability produce clear, concise, interpretable map important skill.Robb, et al1 write:Disease mapping can used provide visual cues disease etiology, particularly relates environmental exposures….Mapping things allows visualization baseline pattern spatial structure disease, potential detection disease clusters, initial investigation exposure-disease relationship.aspects cartography map design general thematic maps quantitative data. issues seem especially pertinent us epidemiologists quantitative population health scientists. include decisions make color choice process categorizing numerical data visual representation map.especially important epidemiology? primary purpose map visually represent something meaningful spatial geographic variation health health-relevant feature (e.g. exposure resource). Communicating meaningful representing variation matters solely technical GIS task; requires epidemiologic insight.instance approach representing ratio measures odds ratio risk ratio different represent risk rate data, understand scale units distinct case. Similarly, understand characterizing variation heterogeneity normal Gaussian (bell-shaped curve) distribution different uniform highly skewed distribution long right tail. insight scales values differently interpreted epidemiologically must translated sensible choices mapping.","code":""},{"path":"cartography-for-epidemiology-i.html","id":"color-choices","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.2.1 Color choices","text":"thematic maps, color flexible important tool communication. Color, hue, contrast can accentuate map elements themes minimize others. result can completely change story map tells seemingly small changes use color. means clear explicit choose given color sequence colors, beware unintentionally misrepresenting data color choices.producing choropleth maps, often talk collections colors color ramps color palettes, single color interesting. quick scan either tmaptools::palette_explorer() utility, Color Brewer website demonstrate many colors choose , just matter preference? Perhaps, guidelines keep mind.","code":""},{"path":"cartography-for-epidemiology-i.html","id":"sequential-palettes","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.2.1.1 Sequential palettes","text":"color palettes use color hue, value, saturation represent symbolize values underlying statistical parameter interest. parameter statistic naturally ordered, sequential monotonic, makes sense choose colors range light dark. Conventionally lighter neutral tones represent lower smaller numbers darker colors intense tones represent higher larger numbers. dark colors jump viewer readily, occasionally inverse used emphasize small values, done caution can counter intuitive.\nFIGURE 2.1: Sequential color palettes\nSequential palettes useful epidemiologic parameters prevalence, risk, rates, continuous exposure values emphasis distinguishing higher values lower values.","code":""},{"path":"cartography-for-epidemiology-i.html","id":"diverging-palettes","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.2.1.2 Diverging palettes","text":"less common choice, one especially important epidemiologic parameters, diverging palette. pattern, neutral color center sequence, two different color hues become darker intense go center.\nFIGURE 2.2: Diverging color palettes\nmight choose color sequence one two reasons:wish show units vary around overall mean median, highlighting larger versus smaller overall mean/median. instance diverging palettes might emphasize areas particularly high burden disease (therefore need additional attention), well unexpectedly low burden disease (therefore worthy understanding protective factors).mapping epidemiologic measure effect (e.g. ratio difference measure) values null ratio \\(1.0\\) (ratio) \\(0\\) (difference). example map Standardized Mortality/Morbidity Ratios, risk odds ratios, prevalence ratios, potentially diverging data. exception ratio values side null (e.g. \\(>>1\\) \\(<<1\\)).\nFIGURE 2.3: Mapping ratio measure divergent palette\nmap , SMR (ratio county-specific prevalence low birth weight infants overall statewide live birth prevalence) varies \\(0.13\\) \\(2.30\\). words, county SMR \\(1.0\\) average prevalence low birthweight. range data sequential way risk prevalence. Instead neutral color assigned counties range \\(0.90-1.10\\), around null. way indicating counties average typical. contrast, counties increasing excess morbidity darker green, substantially lower morbidity darker purple.","code":""},{"path":"cartography-for-epidemiology-i.html","id":"qualitative-palettes","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.2.1.3 Qualitative palettes","text":"Qualitative refers categories naturally ordered sequential. instance counties assigned values single leading cause death county, might choose qualitative palette, sequential diverging palette might mislead viewer thinking natural ordering causes less intense color.","code":""},{"path":"cartography-for-epidemiology-i.html","id":"choropleth-binning-styles","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.2.2 Choropleth binning styles","text":"second topic relevant intersection cartography epidemiologic thinking means choose cut-points visualizing data. words map visually represent underlying statistical value, assign map numerical values colors. depends greatly intended message story map needs tell. interested distinguish units rank higher lower values? primarily focused finding extreme outliers, variation ‘middle’ distribution less interest? distinct purposes give rise different decisions assign colors numerical values data.\nFIGURE 2.4: Comparing binning styles data\ndiscussed lecture, numerous methods styles categorizing continuous data choropleth mapping (e.g. identical data summarized four different styles figure ). Cynthia Brewer (ColorBrewer fame) Linda Pickle (2002) sought evaluate styles effective communicating spatial patterns epidemiologic data.cartographers, Brewer & Pickle critical epidemiologists’ -reliance quantile cut-points, given many strategies seemed cartographic advantages. However, randomizing map ‘readers’ interpret maps underlying epidemiologic data using seven different styles, determined readers accurately reliably interpret disease patterns maps using quantile cut-points. benefits styles purposes, common use communicating spatial areas rank higher lower terms disease burden, quantiles straightforward.","code":""},{"path":"cartography-for-epidemiology-i.html","id":"mapping-time-series","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.2.2.1 Mapping time series","text":"common spatial epidemiology want map spatial patterns disease several different snapshots time series observe evolution disease burden time. changing patterns time raises additional questions make cuts data. several options determining cut-points time series:Pool years data together calculating cut-points (e.g. using quantiles). Use pooled cut-points years.Create custom year-specific cut-points reflect distribution data year separately.Create cut-points based single year apply years.\nFIGURE 2.5: Georgia MVC deaths year common scale\nmap Georgia motor vehicle crash mortality data three different years (2005, 2014, 2017), created tmap using tm_facet() option = year. result, quantile cut-points represent breaks pooling observations across three years. words cut-points come 159 counties times three years: 477 values.common legend applies three maps, strategy useful comparing differences absolute rates across years.\nFIGURE 2.6: U.S. heart disease mortality year-specific scales\nmap heart disease mortality rates county two years (1973-4; 2009-10) uses quantile breaks calculated separately time period. done part heart disease mortality rate declined much years scale distinguished highs lows one map distinguish anything map. case compared absolute rates relative ranking counties two years.","code":""},{"path":"cartography-for-epidemiology-i.html","id":"spatial-analysis-in-epidemiology-1","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.3 Spatial Analysis in Epidemiology","text":"Every spatial epidemiology project must include attention data acquisition, cleaning, integration, visualization. specific workflow driven largely overarching epidemiologic question, purpose, goal. section use specific question illustrate key steps data preparation epidemiologic cartography.Case Example Objective: Create choropleth map visualizing geographic variation -cause mortality rate U.S. counties 2016-2018. Compare choropleth map % uninsured U.S. counties.objective directly relevant lab week well Visualizing US Mortality, Visual Portfolio, assignment due later semester.Although specific question dictates specific data needs, four types data frequently needed produce map health outcome state:Numerator data, case representing count deaths per county target yearDenominator data, case representing population risk death county target yearContextual covariate data, case prevalence uninsured U.S. countyGeographic (geometry) data representing shapes boundaries U.S. counties","code":""},{"path":"cartography-for-epidemiology-i.html","id":"obtaining-and-preparing-numerator-data","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.3.1 Obtaining and preparing numerator data","text":"event interest (e.g. numerator risk, rate, prevalence) can come many sources. conducting primary data collection, arises study design measurement. using secondary data, common use surveillance data (e.g. vital records, notifiable diseases, registries, etc) administrative data source health events.using secondary data sources owned managed another entity, one challenge can occur suppression data protect privacy. example National Center Health Statistics mortality data available CDC WONDER suppresses count deaths, well crude mortality rate, whenever numerator count less ten events. can also instances local state public health agency fails report data NCHS, producing missing values.Depending data format, possible either missing suppressed data inadvertently imported R zero-count rather missing. therefore critically important understand data source guidelines. decision manage zero, missing, suppressed data epidemiologic choice, one must addressed creating map.deal data suppression. many reasons target data may fall thresholds suppression. Perhaps outcome event quite rare, stratifying multiple demographic factors, perhaps counting small geographic unit. suppression problematic mapping, consider pooling multiple years, reducing demographic stratification, using larger geographic areas increase event count reduce number suppressed cells.example, downloaded -cause mortality counts county CDC WONDER 2016-2018 (pooling three years reduce suppression). Lab discuss procedure acquiring data web. importing data appears.","code":"\nhead(death)##    FIPS             County Deaths Population     crude\n## 1 01001 Autauga County, AL    536      55601  964.0114\n## 2 01003 Baldwin County, AL   2357     218022 1081.0836\n## 3 01005 Barbour County, AL    312      24881 1253.9689\n## 4 01007    Bibb County, AL    276      22400 1232.1429\n## 5 01009  Blount County, AL    689      57840 1191.2172\n## 6 01011 Bullock County, AL    112      10138 1104.7544"},{"path":"cartography-for-epidemiology-i.html","id":"obtaining-and-preparing-denominator-or-contextual-data","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.3.2 Obtaining and preparing denominator or contextual data","text":"mortality data accessed CDC included numerator (count deaths) denominator (population risk). However instances may one dataset provides health event data (numerator), need link population denominator order calculate risk, rate, prevalence.U.S. Census Bureau maintains reliable population count data U.S., available aggregates Census Block Group, Census Tract, Zip code tabulation area, City Place, County, State, Region.Census data can aggregated total population stratified age, gender, race/ethnicity, many variables. census data also contains measures social, economic, housing attributes may relevant measure context exposures spatial epidemiologic analyses. two broad types demographic socioeconomic data released Census Bureau.Decennial Census tables (theoretically) count 100% population every 10 years. can cross-classified age, race/ethnicity, sex, householder status (e.g. whether head house owns rents many people live house)American Community Survey (ACS) tables provide much larger number measures based samples rather complete counts. ACS began early 2000’s continually sampled survey. Despite collected every year, many small areas (e.g. census tracts even counties) enough responses single year make reliable estimates. Therefore ACS data pooled 5-year moving-window datasets. instance 2015-2019 ACS reports estimates responses collected time period, available Census Block Group .may accessed Census ACS data directly Census Bureau website classes tasks past. interest reproducibility efficiency, introduce tidycensus package R. excellent tool acquiring either Decennial Census ACS data directly within R. advantage twofold:can quicker learn ;\n2, makes data acquisition fully reproducible without unrecorded steps happening web browsers. words actual code details downloaded (rather un-documented steps clicking downloading browser).practice code next sections lab. included primer. sections walk one way download prepare data quantify county-level prevalence population uninsured, might covariate interest examining spatial variation mortality.selected code relatively efficient, although may find complex confusing. include like explore data-manipulation functions R. Please note need learn functions Census data acquisitions section course, although might find related approaches useful. Note also many ways accomplish anything R, achieve ends different strategies.","code":""},{"path":"cartography-for-epidemiology-i.html","id":"setting-up-census-api","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.3.2.1 Setting up Census API","text":"access Census products (e.g. attribute tables geographic boundary files) using tidycensus package, need register declaring API key. haven’t already done , go register key.","code":"\n# Only do this if you haven't already done it; it should only need to be done once.\n\ntidycensus::census_api_key('YourKeyHere', install = T) "},{"path":"cartography-for-epidemiology-i.html","id":"choosing-variables","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.3.2.2 Choosing Variables","text":"far biggest challenge requesting data Census Bureau knowing want, stored. Census data distributed aggregated counts contained specific tables (unique ID), made specific variables (also unique ID composed table ID plus unique ID). two ways find variables:go Census website browse around. instance Census Data Explorer website one way browse topics variablesYou download variables given year R, use filters search .code queries Census website (assuming internet connection) requests list variables ACS 5-year pooled dataset (e.g. acs5) window time ending 2018 (e.g. 2014-2018). also specify cache = T just means save results quicker loading ask future.may easiest look dataset using View() function. , see three variables, option click Filter button (upper left View pane; looks like funnel). Filter option one way search key words either label concept column.interested capturing prevalence uninsured county. Try :Go View mode variables (e.g. View(all_vars))Click Filter buttonType insurance concept fieldType B27001 name field\nFIGURE 2.7: Screenshot RStudio View() ACS variables\nwant list specific tables variable ID’s extract Census. lab use detailed code accomplish goal.may noticed full list ACS variables nearly 27,000 variables! code use tricks filter huge list variables get names want. relies tidyverse package stringr great manipulating character variables (great many data science tasks; read stringr ). case using filter just table want (e.g. B27001), get names variables contain string ‘health insurance’.list variables want acquire; one represents count uninsured multiple age groups. sum get total population uninsured prevalence.","code":"\nlibrary(tidycensus)\n\nall_vars <- load_variables(year = 2018, dataset = 'acs5', cache = T)\n\nhead(all_vars)\na <- all_vars %>% \n  filter(stringr::str_detect(name, 'B27001')) %>%  # this limits to rows for the B27001 table\n  filter(stringr::str_detect(label, 'No health insurance'))  # this limits to rows with this text\n\nmyVars <- c('B27001_001', a$name)##  [1] \"B27001_001\" \"B27001_005\" \"B27001_008\" \"B27001_011\" \"B27001_014\"\n##  [6] \"B27001_017\" \"B27001_020\" \"B27001_023\" \"B27001_026\" \"B27001_029\"\n## [11] \"B27001_033\" \"B27001_036\" \"B27001_039\" \"B27001_042\" \"B27001_045\"\n## [16] \"B27001_048\" \"B27001_051\" \"B27001_054\" \"B27001_057\""},{"path":"cartography-for-epidemiology-i.html","id":"retrieving-data-from-census","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.3.2.3 Retrieving data from Census","text":"actually retrieve data Census use function get_acs() (getting decennial data function get_decennial()). request data must specify geography (e.g. want counts states, counties, census tracts, census block groups?), variables, year, dataset. Look ?get_acs read options.following code chunks use dplyr tidyverse verbs %>% (pipe) connect data steps together. complex first, worth carefully examining step works. familiar syntax, probably helpful review Appendix section dplyr.Looking first rows data object insure_tidy , might surprised column labeled variable, cells within column actually thought variable names! data structured tidy format, happens long wide. Read transposing data . following steps reshape data useful.code :define geography = county.Specify vector (previously created named myVars) variables downloadSpecify year interest. Note 2018 references 2014-2018 5-year windowspecify survey, often acs5The code necessary variables age-specific counts number uninsured people. one variable, B27001_001 count included table. words, denominator calculating prevalence uninsured. Therefore following code :filter() restricts rows data variable denominator count (B27001_001). Filter like SASrename() way rename variables likingselect() drops variable called variableThe code addresses issue common census tables: may constructed way want . discussed , case values counts age group, want single count entire population county. Therefore, necessary sum across aggregate counts age groups get single count (numerator number uninsured) county.strategy used specific data long format, happens tidy data case. Read changing long wide .code achieves steps:filter() using != mean “equal ”; simply removes denominator variable, summing numerator countsgroup_by() useful dplyr verb; similar using class SAS, tells R something separately group (e.g. GEOID county case)summarise() verb works hand--hand group_by(). grouping declares groups, summarise() tells . case just want count uninsured across age gruops.simple merge, worth mentioning steps:left_join() one famiy merging verbs. left left_join() simply means start first table (one left) merge second table. implications whether rows rows left right (first second) table retained. case left first table insure_denom right second table insure_num)mutate() calculates uninsured prevalenceselect() excludes unnecessary variablesThe code process complex. specific exact scenario, scenario might require different steps. challenge , new spatial analyst, think mind data looks beginning want look end. create sequence steps progresses beginning end. takes practice, worthwhile spatial epidemiology, also data science processing generally.","code":"\n# First, request the data from ACS\ninsure_tidy <- get_acs(geography = 'county',\n                     variables = myVars,\n                     year = 2018, \n                     survey = 'acs5') %>%\n  select(-moe)\n\n# Look at the resulting object\nhead(insure_tidy)## # A tibble: 6 x 4\n##   GEOID NAME                    variable   estimate\n##   <chr> <chr>                   <chr>         <dbl>\n## 1 01001 Autauga County, Alabama B27001_001    54277\n## 2 01001 Autauga County, Alabama B27001_005       36\n## 3 01001 Autauga County, Alabama B27001_008      157\n## 4 01001 Autauga County, Alabama B27001_011      397\n## 5 01001 Autauga County, Alabama B27001_014      354\n## 6 01001 Autauga County, Alabama B27001_017      500\n# Now I pull out the denominator\ninsure_denom <- insure_tidy %>%\n  filter(variable == 'B27001_001') %>%\n  rename(TOTPOP = estimate) %>%\n  select(-variable)\n\n# Look at the resulting object\nhead(insure_denom)## # A tibble: 6 x 3\n##   GEOID NAME                    TOTPOP\n##   <chr> <chr>                    <dbl>\n## 1 01001 Autauga County, Alabama  54277\n## 2 01003 Baldwin County, Alabama 205452\n## 3 01005 Barbour County, Alabama  22882\n## 4 01007 Bibb County, Alabama     20468\n## 5 01009 Blount County, Alabama   57169\n## 6 01011 Bullock County, Alabama   9978\n# Now I sum up all the variables for the numerator\ninsure_num <- insure_tidy %>%\n  filter(variable != 'B27001_001') %>%\n  group_by(GEOID) %>%\n  summarise(no_insure = sum(estimate))\n\nhead(insure_num)## # A tibble: 6 x 2\n##   GEOID no_insure\n##   <chr>     <dbl>\n## 1 01001      3875\n## 2 01003     20864\n## 3 01005      2558\n## 4 01007      1619\n## 5 01009      6303\n## 6 01011      1076\n# Finally, merge the numerator and denominator in order to calculate prevalence\nuninsured <- insure_denom %>%\n  left_join(insure_num, by = 'GEOID') %>%\n  mutate(uninsured = no_insure / TOTPOP) %>%\n  select(GEOID, uninsured)\n\n# Take a look at the resulting object\nhead(uninsured)## # A tibble: 6 x 2\n##   GEOID uninsured\n##   <chr>     <dbl>\n## 1 01001    0.0714\n## 2 01003    0.102 \n## 3 01005    0.112 \n## 4 01007    0.0791\n## 5 01009    0.110 \n## 6 01011    0.108"},{"path":"cartography-for-epidemiology-i.html","id":"obtaining-and-preparing-geographic-data","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.3.3 Obtaining and preparing geographic data","text":"final type data needed geographic geometry data. , source geometry data varies study specifics: may need polygons (e.g. political administrative boundaries), lines (e.g. transportation networks), points (e.g. hospitals, food stores, toxic waste sites, etc). hand may need data raster format, including weather air pollution surfaces. open-access versions many types geographic data online.choropleth mapping, area units including administrative political boundaries commonly used. U.S. context, Census geographies frequently used, including blocks, block groups, tracts, zip-code tabulation areas, counties, cities & places, metropolitan areas, tribal areas, states, regions. section provide brief introduction downloading census boundary files directly R.","code":""},{"path":"cartography-for-epidemiology-i.html","id":"obtain-geometry-data-from-tidycensus","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.3.3.1 Obtain geometry data from tidycensus","text":"first option minor modification code previous section acquiring census count data. get_acs() function argument geometry = FALSE default. However, change geometry = TRUE, automatically retrieve data sf object including geometry column!One argument get_acs() demonstrated shift_geo. FALSE default, set shift_geo = TRUE, return boundaries projected Albers Equal Area, states Hawaii Alaska artificially shifted fit thematic map U.S.","code":"\ninsure_tidy <- get_acs(geography = 'county',\n                     variables = myVars,\n                     year = 2018, \n                     geometry = TRUE,   # added geometry = T\n                     survey = 'acs5') "},{"path":"cartography-for-epidemiology-i.html","id":"obtain-geometry-data-from-tigris","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.3.3.2 Obtain geometry data from tigris","text":"tidycensus package actually requests geometry depending another package called tigris (Census geography files called TIGER files). obtaining attributes (e.g. population counts) geometries time, tidycensus package makes sense. However, sometimes need geometry, perhaps data come sources Census Bureau.want directly obtain areal boundary units, coastline data, road rail networks, voting districts, spatial data maintained Census Bureau, consider using tigris package. Try looking help documentation (e.g. ?tigris, click Index link bottom see options).demonstrate retrieving U.S. county boundaries:code :counties() function one dozens tigris downloading specific kinds boundary datacb = TRUE adjusts level detail resolution boundaries. default cb = FALSE returns detailed data, quite large. Setting cb = TRUE defaults generalized (1:500k scale) shape.resolution = '5m' specification want even generalized boundary file. 1:5 million scale coarse terms resolution curves county boundaries, also smaller file. must decide balance file size resolution specific need.year = 2018 specifies vintage boundary files. Tracts, counties, cities, etc change boundaries year year.class = 'sf' results object returned sf object, rather sp class data (default).can see summary data CRS/projection EPSG code 4269 (unprojected).boundary file look like?Census boundaries include information U.S. counties territories! Therefore map looks way Guam, American Samoa, Puerto Rico, well Hawaii Alaska included. interested mapping “lower 48” contiguous states, exclude . code , also transform project data Albers Equal Area using EPSG code","code":"\nlibrary(tigris)\noptions(tigris_use_cache = TRUE)\nus <- counties(cb = TRUE,\n                        resolution = '5m', \n                        year = 2018,\n                        class = 'sf')\nsummary(us)##    STATEFP            COUNTYFP           COUNTYNS           AFFGEOID        \n##  Length:3233        Length:3233        Length:3233        Length:3233       \n##  Class :character   Class :character   Class :character   Class :character  \n##  Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n##                                                                             \n##                                                                             \n##                                                                             \n##     GEOID               NAME               LSAD               ALAND          \n##  Length:3233        Length:3233        Length:3233        Min.   :8.209e+04  \n##  Class :character   Class :character   Class :character   1st Qu.:1.079e+09  \n##  Mode  :character   Mode  :character   Mode  :character   Median :1.563e+09  \n##                                                           Mean   :2.833e+09  \n##                                                           3rd Qu.:2.367e+09  \n##                                                           Max.   :3.770e+11  \n##      AWATER                   geometry   \n##  Min.   :0.000e+00   MULTIPOLYGON :3233  \n##  1st Qu.:7.038e+06   epsg:4269    :   0  \n##  Median :1.950e+07   +proj=long...:   0  \n##  Mean   :2.161e+08                       \n##  3rd Qu.:6.159e+07                       \n##  Max.   :2.599e+10\nplot(st_geometry(us))\nus <- us %>%\n  filter(!(STATEFP %in% c('02', '15', '66', '60', '78', '72', '69'))) %>%\n  select(GEOID, STATEFP, COUNTYFP, NAME) %>%\n  st_transform(5070)\n\nplot(st_geometry(us))"},{"path":"cartography-for-epidemiology-i.html","id":"merging-attributes-and-geography","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.3.4 Merging Attributes and Geography","text":"final step data preparation bringing together attribute data geometry data, assuming already incorporated. Assuming attributes data.frame (perhaps tibble, tidyverse data table object), geometry sf object (also class data.frame), merge straightforward. needed merging joining data:Unique key ID variable attribute data matches ID geometry dataUnique key ID variable geometry data matches ID attribute dataMatching ID’s require variable name require variable type.merging several datasets, one sf object, put dataset first sequence, insure final object remains class sf. put sf first, may need re-define object sf end. See Appendix st_as_sf() detail.","code":"\nus2 <- us %>%\n  left_join(death, by = c('GEOID' = 'FIPS')) %>%\n  left_join(uninsured, by = 'GEOID')"},{"path":"cartography-for-epidemiology-i.html","id":"mapping-mortality-uninsured","chapter":"Week 2 Cartography for Epidemiology I","heading":"2.3.5 Mapping Mortality & Uninsured","text":"","code":"\nlibrary(tmap)\n\nt1 <- tm_shape(us2) + \n  tm_fill('crude',\n          style = 'quantile',\n          palette = 'BuPu',\n          title = 'Rate per 100,000 py') + \n  tm_borders(alpha = 0.2) +\ntm_credits('Source: CDC Wonder',\n           position = c('RIGHT', 'BOTTOM')) + \ntm_layout(main.title = 'All-cause mortality rate, 2016-2018',\n          bg.color = 'grey85')\n\nt2 <- tm_shape(us2) + \n  tm_fill('uninsured',\n          style = 'quantile',\n          palette = 'YlOrRd',\n          title = '% Uninsured',\n          legend.format = list(fun=function(x) paste0(formatC(x * 100, \n                                                              digits=1, \n                                                              format=\"f\"), \"%\"))) +\n  tm_borders(alpha = 0.2) +\ntm_credits('Source: American Community Survey',\n           position = c('RIGHT', 'BOTTOM')) + \ntm_layout(main.title = 'Uninsured Prevalence, 2014-2018',\n          bg.color = 'grey85')\n\n\ntmap_arrange(t1, t2, ncol = 1)"},{"path":"cartography-for-epidemiology-ii.html","id":"cartography-for-epidemiology-ii","chapter":"Week 3 Cartography for Epidemiology II","heading":"Week 3 Cartography for Epidemiology II","text":"","code":""},{"path":"cartography-for-epidemiology-ii.html","id":"learning-objectives-2","chapter":"Week 3 Cartography for Epidemiology II","heading":"3.1 Learning objectives","text":"","code":""},{"path":"cartography-for-epidemiology-ii.html","id":"additional-resources-2","chapter":"Week 3 Cartography for Epidemiology II","heading":"3.2 Additional resources","text":"Report confidentiality issues policies related geospatial data public health applicatins","code":""},{"path":"cartography-for-epidemiology-ii.html","id":"important-vocabulary-2","chapter":"Week 3 Cartography for Epidemiology II","heading":"3.3 Important Vocabulary","text":"TABLE 1.2:  Vocabulary Week 3","code":""},{"path":"cartography-for-epidemiology-ii.html","id":"spatial-thinking-in-epidemiology-w3","chapter":"Week 3 Cartography for Epidemiology II","heading":"3.4 Spatial Thinking in Epidemiology, w3","text":"“Progress achieving health depends upon effectively collecting, integrating, \nutilizing medical, public health, socioeconomic, environmental, physical science data.”“Although new technological advances can empower individuals neighborhoods seeking\nresources better health care, also heightened concerns individual privacy\nconfidentiality.”– Confidentiality Issues Policies Related Utilization Dissemination Geospatial Data Public Health ApplicationsEthical concern justice, beneficence, respect persons ground guidelines practices responsible conduct public health research. work geospatial data concerns lessened instead often heightened, power locational information means discerning private information risk intended unintended breaches confidentiality even transmission stigma groups highlighting health status marginalized populations.","code":""},{"path":"cartography-for-epidemiology-ii.html","id":"risks-of-privacy-breaches-in-collection-of-geospatial-information","chapter":"Week 3 Cartography for Epidemiology II","heading":"3.4.1 Risks of privacy breaches in collection of geospatial information","text":"Geographic identifiers scale state (e.g. county, city, census tract, address) considered Protected Health Information  HIPAA connected individual health information. Surveillance research activities routinely collect geospatial information contact notification purposes, reporting, although many consent forms explicitly explain intended purpose use geospatial information.individual expect protection privacy individual PHI date birth name, always explicit information address can uniquely identifiable linkable data. Privacy breached app-based geocodes captured without consent, geospatial information collected without express consent (e.g. research respondent asked report address someone social network without persons consent).respect personal autonomy dictates individuals permitted control private information, can also risks beyond breach privacy. instances, disclosed geospatial information result harms participant others. example collected address information inadvertently released someone seeking commit violence (e.g case intimate partner violence). Similarly, studies collecting geospatial information can () requested force law aid investigation prosecution suspected crimes. Thus collection geospatial information must well reasoned respect risk benefit participant, appropriate notification consenting process, protections place maintain confidentiality.","code":""},{"path":"cartography-for-epidemiology-ii.html","id":"risk-of-confidentiality-breaches-through-unintentional-de-identification","chapter":"Week 3 Cartography for Epidemiology II","heading":"3.4.2 Risk of confidentiality breaches through unintentional de-identification","text":"private geospatial data collected, responsibility data owners (e.g. public health agencies, researchers) protect confidentiality disclosed private information. Confidentiality protection refers secure control confidential data well avoidance unintended re-identification data deemed ‘de-identified’ data linkages.Maintaining data security critical public health research surveillance activities, sometimes geospatial data ignored unique identifier. one instance submitted data request public health agency obtain surveillance data abortion incidence. data delivered Excel sheet individual identifiers name date birth removed, field address residence included. address incredibly powerful unique identifier, particularly combined fields including age sex.Geospatial data can stored separately research attributes, maintaining key linkage instances spatial data needed. needed, less risk accidental disclosure fields.Another risk drives many public health agencies restrictive guidelines around data suppression reporting, concern re-identification individuals aggregated data small cell size ability discern identity quasi-identifiers. example, age, race, ethnicity, health outcome quasi-identifiers instances cross-tabulation make individuals unique nearly .study 1990 decennial census, researchers found 87% U.S. population uniquely identified three variables: exact date birth, zip code, gender! due part combined granularity specificity two variables: date birth zip code. instances, reporting health events zip code level without respect age, perhaps age categorized coarse groups eliminate risk. take home message stratification data prefer better scientific understanding can quickly lead least sub-groups individually nearly individually identifiable.","code":""},{"path":"cartography-for-epidemiology-ii.html","id":"risk-of-stigmatization-of-place","chapter":"Week 3 Cartography for Epidemiology II","heading":"3.4.3 Risk of stigmatization of place","text":"final ethical concern particularly relevant disease mapping activities concern unintentional harm persons populations stigmatization place. can happen map identifies locations marginalized populations spend time, serves either stigmatize group, stigmatize others unassociated group, sharing location. stigmatization can lead psychosocial harms, also can alter behavior institutional forces including social services, law enforcement, health services.Examples stigmatization place include identification venues men sex men seek partners, mapping concentrations commercial sex workers injection drug users. concern stigmatization place also raised point view social epidemiology, predominantly Black brown neighborhoods repeatedly characterized ‘unhealthy.’ potential harm perpetrated maps arise (presumably well-intended) desire highlight unjust burdens, failure similarly highlight resilience face burdens.Relatedly, many spatial representations economic racial disparities fail name factors give rise inequities, including role socio-historical structural discrimination. failing name structural racism policies serve concentrate affluence separately concentrated poverty, maps contribute narrative communities way blame health outcomes.","code":""},{"path":"reproducibility-and-projects-in-r.html","id":"reproducibility-and-projects-in-r","chapter":"Week 4 Reproducibility and Projects in R","heading":"Week 4 Reproducibility and Projects in R","text":"","code":""},{"path":"reproducibility-and-projects-in-r.html","id":"additional-resources-3","chapter":"Week 4 Reproducibility and Projects in R","heading":"Additional Resources","text":"R Markdown CheatsheetComprehensive guide using R Markdown\nChapter within R Markdown guide specific Notebooks\nChapter within R Markdown guide specific NotebooksEpidemiologist R Handbook - Working projectsEpidemiologist R Handbook - R markdownWorking Projects RR Data Science - Workflow Projects","code":""},{"path":"reproducibility-and-projects-in-r.html","id":"the-benefits-of-code-reproducibility","chapter":"Week 4 Reproducibility and Projects in R","heading":"4.1 The benefits of code reproducibility","text":"Reproducibility refers capacity process create fully independently replicable either future another person. Non-reproducibility scientific findings cited leading problem problem comes ad-hoc thus non-reproducible conduct data preparation analysis.Spatial epidemiology requires intensive data preparation, cleaning, management, often complex sequence analytic steps. words difficult another analyst future version repeat process exactly way unless perfect record done. reason, reproducibility analysis emphasized required course.analysis reproducible sure data stays paired code, (many possible) steps change manipulate data written scripts rather done ‘hand’ (e.g. Excel editor).","code":""},{"path":"reproducibility-and-projects-in-r.html","id":"workflows-to-enhance-reproducibility","chapter":"Week 4 Reproducibility and Projects in R","heading":"4.2 Workflows to enhance reproducibility","text":"R RStudio often used data preparation, analysis, reporting, fundamental importance reproducibility (making analytic processes transparent, interpretable repeatable) built-many features. Appendix introduces several strategies important reproducibility broadly, also important work course.First, brief introduction projects RStudio, slightly -depth description specific file format, rmarkdown can used create Notebooks.","code":""},{"path":"reproducibility-and-projects-in-r.html","id":"using-projects-in-r","chapter":"Week 4 Reproducibility and Projects in R","heading":"4.2.1 Using Projects in R","text":"project R organizes work much might use folders computer sort separate logical scheme. words, place put multiple documents files related one another.instance, might choose single project week class, perhaps separate project assignment. project directory (folder) store data, scripts code, outputs (e.g. saved maps saved objects) specific week assignment.advantage creating formal project RStudio (rather just regular folder, example), RStudio projects certain benefits coding workflow.open project, working directory (e.g. root directory file path R looks files import) automatically set inside project folder. means keep data inside project, never worry broken links incorrect file paths occur data moved.Projects remember environmental settings RStudio, may customize something specific project remembered time open project.ever work version control system Github, projects natural strategy contain repositoryYou avoid using setwd() R! function changes working directory may taught make easier. bad whatever pathname put inside setwd() amost never work another computer. means code fragile specific computer, probably computer specific point time.find relying setwd() strategy hard code file pathnames, please consider learning projects. help make code less fragile robust sharing reproducing.create new project:1.Look upper-right corner RStudio blue-ish R symbol likely say ‘Project.’ Click pull-menu select New Project\n2. see Project Wizard open three options:\n+ yet created folder computer project, choose New Directory\n+ already folder (e.g. perhaps named ‘Week1’), choose Existing Directory\n+ forking checking repository Github, GitLab system, choose Version Control\n3. Navigate location want new folder , else location existing folder already \n4. Name project click Create ProjectOnce project created, can navigate via finder folder. notice new file extension .Rproj. double-click file, project open, including whatever files settings already worked .Get habit opening R double-clicking xxx.Rproj icon project folder. makes sure working directory set helps maintain relative rather absolute file pathnames within project folder.","code":""},{"path":"reproducibility-and-projects-in-r.html","id":"organizing-projects","chapter":"Week 4 Reproducibility and Projects in R","heading":"4.3 Organizing projects","text":"projects analyses simple perhaps involve single script document use built-data. projects complex , involving dataset(s), one files code scripts, possibly output including datasets well images saved figures, markdown files reports. good practice standard strategy organizing .","code":""},{"path":"reproducibility-and-projects-in-r.html","id":"make-scripts-that-do-discrete-tasks","chapter":"Week 4 Reproducibility and Projects in R","heading":"4.3.1 Make scripts that do discrete tasks","text":"may used one file hundreds even thousands lines code every part analysis. isn’t inherently wrong, can make difficult find particular snippets code defined recoded variable, carried descriptive analyses. larger projects, consider creating separate scripts discrete steps. many different R scripts given project, consider storing sub-folder perhaps labeled code/. might break work separate scripts like :script data preparation. allows quickly return process retrieving preparing data make changes.Scripts descriptive analysis. may want revisit descriptives future separate makes easier.Scripts (one ) complex analyses including modeling, figure preparation, simulation.script informative name project-x-data-prep.R project-x-create-final-maps.R.","code":""},{"path":"reproducibility-and-projects-in-r.html","id":"always-store-data-with-code-and-output","chapter":"Week 4 Reproducibility and Projects in R","heading":"4.3.2 Always store data with code and output","text":"creating maps, raw (possibly post-processed, intermediate) data supports maps stored inside project folder. way guarantee can return year recreate map exactly. multiple data files, might consider putting content sub-folder, possibly labeled data/.","code":""},{"path":"reproducibility-and-projects-in-r.html","id":"maintain-all-output-files-figures-cleaned-datasets-etc","chapter":"Week 4 Reproducibility and Projects in R","heading":"4.3.3 Maintain all output files (figures, cleaned datasets, etc)","text":"Just want store code data together, also plan store output content main project folder possibly one sub-folders (e.g. images/ reports/). several kinds outputs might generated including:Images figuresMapsCleaned prepared datasets (either stored .xlsx .csv possibly stored R binary format .rds)Reports (e.g. rendered R-markdown either html pdf)","code":""},{"path":"reproducibility-and-projects-in-r.html","id":"use-the-here-package-to-maintain-robust-relative-pathnames","chapter":"Week 4 Reproducibility and Projects in R","heading":"4.4 Use the here package to maintain robust relative pathnames","text":"many reasons keep work organized, one maintain known constant relationship data code stored. discussed , use setwd() creates rigid absolute pointer file (e.g. data might C:\\MyDocuments\\EPI563\\Week1) stored. changed computers changed file structure current computer, absolute path likely fail making code non-reproducible (code find data)!Instead, please try preference relative pathnames. way describing something relative given starting point. case projects R-studio, starting point always folder containing project. Thus, location dataset stored sub-folder called data : data/mydataset.xlsx; assumed folder data sub-folder parent project folder. long keep project self-contained folder (e.g. copy/paste folder share folder contents), relative location robust.package developed try make bit easier. package named also function named () (know feels bit repetitive!). function, () serves describe hierarchical nesting folders locates file location desire (e.g. import dataset save figure ). examples use ():Importing data: mydata <- read.csv(('data', 'wave1', 'wave1_data.csv)). code, create new object (named mydata) results using function read.csv(). data located within project folder relative path location: data/wave1/wave1_data.csv.Saving output: ggsave(('figures', 'figure1.png')). code, save ggplot() figure computer location within overall project folder: figures/figure1.png.Caution: work Windows OS environment, careful designate file pathnames. R uses notation similar Unix OS, also one adopted Mac OS, define set nested folders forward slash : H:/mkram02/gis-file . Unfortunately opposite Windows describes pathnames (e.g. Windows use back slash like : H:\\mkram02\\gis-file). Using packages avoids confusion.","code":""},{"path":"reproducibility-and-projects-in-r.html","id":"specify-a-relative-location-outside-the-working-directory","chapter":"Week 4 Reproducibility and Projects in R","heading":"4.4.1 Specify a relative location outside the working directory","text":"one folder entire course, inside separate project directory week. working project Week2, might wish load file saved previously Week1. words sub-folder, actually outside current directory. use setwd() function change location, creates possibly fragile absolute pathname can dangerous. Instead create robust relative pathname referring file relation current location.Using two dots pathname tells R go level directory. georgia.csv file referred Week1 directory, currently woring Week2 :means “go level, look data folder, death-data folder, load georgia.csv file.” need go two () levels, simply repeat: ../../data/death-data.georgia.csv","code":"\ndd <- read.csv('../data/death-data/georgia.csv')"},{"path":"introduction-to-r-notebooks.html","id":"introduction-to-r-notebooks","chapter":"Week 5 Introduction to R Notebooks","heading":"Week 5 Introduction to R Notebooks","text":"","code":""},{"path":"introduction-to-r-notebooks.html","id":"why-r-notebooks","chapter":"Week 5 Introduction to R Notebooks","heading":"5.1 Why R Notebooks?","text":"assignments course, least portion deliverable fully-functional, annotated R Notebook. notebooks actually specific case rmarkdown format creating reproducible documents interspersed R code, analytic results text. example eBook, many resources course created using rmarkdown related packages bookdown.said, R Notebooks specific instance case markdown incorporated R Studio nice features applied data analyst.Notebooks allow type text explains happening, interpret findings, note areas need exploration. similar usual commenting might familiar , makes easy narrative expansive comments.Notebooks contain functional R code interspersed narrative comments, code, comments output results can seen one continuous way.Notebooks work interactive mode. means coding working can see results document. save Notebook text, code results saved!reason using Notebooks provide means clear annotation documentation combined ready reproducibility. Reproducibility means someone else (future !) come back get result .benefit advantages , recommend gain familiarity basic (perhaps optional) formatting described . also recommend develop knack rich annotation documentation, just brief (often cryptic) comments used writing SAS code! Document plan . Document . Document results means. Document else needs done.R Notebooks handy serve like ‘lab notebooks’ documenting thinking go. great reports want share others (future self). still ok use regular R-scripts analyses require extensive documentation. example writing functions data-cleaning scripts may appropriate simple scripts extension my_code.R rather my_code.Rmd (e.g. notebook markdown).","code":""},{"path":"introduction-to-r-notebooks.html","id":"important-r-notebook-functions","chapter":"Week 5 Introduction to R Notebooks","heading":"5.2 Important R Notebook functions","text":"","code":""},{"path":"introduction-to-r-notebooks.html","id":"the-yaml","chapter":"Week 5 Introduction to R Notebooks","heading":"5.2.1 The YAML","text":"create new R Notebook R Markdown file within R Studio (e.g. via File > New File > R Notebook), ‘YAML’ automatically created top script delineated three dash lines ---. YAML stands “yet another markup language” set instructions finished notebook look structured. can accept default YAML structure (course modifying title) copy/paste YAML top script. can also read online additional customizations YAML, none necessary course.However, YAML can tricky sometimes. general tips:Keywords (e.g. title, date output) end colon comes ‘argument’ ‘setting’ keyword.‘argument’ ‘setting’ keyword takes multiple lines, can hit , case output:.\nHowever, note sub-arguments (e.g. html_notebook:) parent must indented 2 spaces.\nsub-arguments (e.g. number_sections: yes specific setting html_notebook:) must indented additional 2 spaces. indentations represent organization connect multiple settings correct parent keyword.\nHowever, note sub-arguments (e.g. html_notebook:) parent must indented 2 spaces.sub-arguments (e.g. number_sections: yes specific setting html_notebook:) must indented additional 2 spaces. indentations represent organization connect multiple settings correct parent keyword.","code":"---\ntitle: \"Title of your notebook\"\nauthor: \"Your Name Here\"\ndate: \"Submission date here\"\noutput:\n  html_notebook:\n    number_sections: yes\n    toc: yes\n    toc_float: yes\n---"},{"path":"introduction-to-r-notebooks.html","id":"typing-text","chapter":"Week 5 Introduction to R Notebooks","heading":"5.3 Typing text","text":"utility R Notebooks ability completely document thinking process carry analyses. necessary wordy just sake taking space, opportunity clearly delineate goals, steps, data sources, interpretations, etc.can just start typing text script serve purpose. text formatting functions summarized later document, Cheat sheets online resources linked elsewhere.","code":""},{"path":"introduction-to-r-notebooks.html","id":"adding-r-code","chapter":"Week 5 Introduction to R Notebooks","heading":"5.4 Adding R Code","text":"R Notebooks let write R code within Markdown file, run code, seeing results appear right code (rather Console, usually appear).2 ways add new chunk R code:Click green C-Insert button top editor panel R Studio. top option R code.Use keyboard short cut:\nMac Command + Shift + \nWindows Ctrl + Alt + \nMac Command + Shift + IWindows Ctrl + Alt + INotice R code chunks delineated three back-ticks (sort like apostrophes)…back-ticks typically key tilde (~) upper left keyboards. space sets 3 back-ticks R code goes called code chunk.see syntax color change things type inside R chunk (e.g. delineated ```), versus outside. Everything inside follows syntax rules R. Everything outside printed final report, run R code.want run code inside code chunks, can either:Place cursor line click Ctrl+enter (Windows) CMD+Return (Mac), can click Run button top editor pane R Studio.run code within chunk click green Run Current Chunk button upper-right code chunk.code corresponding results.way can iterate analytic process…switching running code, viewing output, documenting free text.want see current work--progress looks like HTML, can click Preview button top panel. save document, open Viewer panel.","code":"\nhead(mtcars)##                    mpg cyl disp  hp drat    wt  qsec vs am gear carb\n## Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\n## Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\n## Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\n## Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\n## Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\n## Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\nplot(cars)"},{"path":"introduction-to-r-notebooks.html","id":"workflow","chapter":"Week 5 Introduction to R Notebooks","heading":"5.5 Workflow","text":"benefit Notebooks (slightly different regular Markdown) can work interactively code, seeing results immediately just regular script. contrast ‘regular’ Markdown file doesn’t run code click ‘Knit.’recommend workflow:Click File>New File>R Notebook create new file. Edit YAML (stuff top) correct title, author, etc. template created example code. Delete generic code YAML. Save file project folder.Use space YAML type objective purpose analysis, introduction background useful.Carry analysis, inserting code chunks, running , documenting free text go.wish, can see results look HTML clicking Preview button.Sometimes go back re-run code different order, else delete code without re-running entire script. means code reproducible objects created longer code support . final check reproducibility (assurance code self-contained dependent steps outside script) recommend always end clicking RUN button top panel. Specifically, choose Restart R Run Chunks. runs sure look results! step erases data objects memory starts running script top. error , something missing code. Try figure make changes code script everything expect.","code":""},{"path":"formatting-markdown-and-notebooks.html","id":"formatting-markdown-and-notebooks","chapter":"Week 6 Formatting Markdown and Notebooks","heading":"Week 6 Formatting Markdown and Notebooks","text":"","code":""},{"path":"formatting-markdown-and-notebooks.html","id":"optional-functions","chapter":"Week 6 Formatting Markdown and Notebooks","heading":"6.1 Optional functions","text":"list formatting functions long. include couple find useful (mandatory) :","code":""},{"path":"formatting-markdown-and-notebooks.html","id":"customizing-your-yaml","chapter":"Week 6 Formatting Markdown and Notebooks","heading":"6.2 Customizing your YAML","text":"default YAML perfectly fine, YAML top script includes added functions including:Specify table contents - works use headersSpecify section numberingSpecify table contents ‘floating’ means html visible even scroll. PDF rendering, ‘float’ option.","code":""},{"path":"formatting-markdown-and-notebooks.html","id":"simple-formatting-of-your-notebook","chapter":"Week 6 Formatting Markdown and Notebooks","heading":"6.3 Simple formatting of your Notebook","text":"generally helpful organize document using headers separate tasks steps code. can easily create headers using hashtag/pound sign #. Specifically…# beginning line denotes top-level (level-1) header large bold.## beginning line denotes level-2 header### unsurprisingly level-3 header!Make sure space # textAlways leave blank line (return/enter) header text ‘regular’ text.can also make numbered bulleted lists helpful. line begins either asterisk (*) number begin bulleted numbered list.Headers populated table contents, specified.","code":""},{"path":"formatting-markdown-and-notebooks.html","id":"text-formatting","chapter":"Week 6 Formatting Markdown and Notebooks","heading":"6.4 Text formatting","text":"R Markdown Cheatsheets lots examples formatting. Three things use frequently bold, italics, numbered bulleted lists.Numbered lists start number, line must end 2 space (blank line ).Instead numbers can use lettersBulleted lists can initiated asterisk +, also must 2 spaces (blank carriage return) end item.","code":""},{"path":"formatting-markdown-and-notebooks.html","id":"making-tables","chapter":"Week 6 Formatting Markdown and Notebooks","heading":"6.5 Making tables","text":"required, may want summarize data table R Markdown. packages devoted creating tables, can create quick--dirty table just using keyboard symbols.First start making header row. Separate column name ‘pipe’ symbol, |Put continuous line dashes (-----) column name, separating columns pipe symbol (|)Now type text corresponding row column. Separate columns pipe (|) separate rows carriage return/EnterSo following text typed directly Markdown file (e.g. inside code chunk):produce following output:","code":"Column 1  | Column 2 | Column 3\n----------|----------|-----------\nText 1    | Text 2   | Text 3\nNext line | Next line 2 | Next line 3"},{"path":"formatting-markdown-and-notebooks.html","id":"final-note","chapter":"Week 6 Formatting Markdown and Notebooks","heading":"6.6 Final Note","text":"Remember final step think done project, Click Restart R Run Chunks, save/preview Notebook sure expect.","code":""},{"path":"sf-overview.html","id":"sf-overview","chapter":"Week 7 Tips for working with sf data class","heading":"Week 7 Tips for working with sf data class","text":"Simple Features (sf) cheat sheet","code":""},{"path":"sf-overview.html","id":"st_set_geom","chapter":"Week 7 Tips for working with sf data class","heading":"7.1 st_set_geom()","text":"feature sf class data special column containing geometry information (often labeled geom) different variables. Specifically sticky. Stickiness variable means manipulate sf data object, geom column almost always sticks rest data even try remove .Imagine happen regular data.frame typed code console mvc[1, 1:2]. Typically kind numerical indexing cause R return row 1 columns 1 2. However, try R sf object happens:Notice get first row, first second column also got geom column even though didn’t request . stickiness generally desirable, important keep geographic/geometry data connected attribute data. However times want drop information. several ways , explicit way:literally erases sets NULL geometry column. retrieved without going back original data.","code":"\nlibrary(sf)\nlibrary(tidyverse)\n\nmvc <- st_read('../DATA/GA_MVC/ga_mvc.gpkg')## Reading layer `ga_mvc' from data source \n##   `C:\\Users\\mkram02\\OneDrive - Emory University\\EPI563-Spatial Epi\\SpatialEpi-2021\\DATA\\GA_MVC\\ga_mvc.gpkg' \n##   using driver `GPKG'\n## Simple feature collection with 159 features and 17 fields\n## Geometry type: MULTIPOLYGON\n## Dimension:     XY\n## Bounding box:  xmin: -85.60516 ymin: 30.35785 xmax: -80.83973 ymax: 35.00066\n## Geodetic CRS:  WGS 84\nmvc[1, 1:2]## Simple feature collection with 1 feature and 2 fields\n## Geometry type: MULTIPOLYGON\n## Dimension:     XY\n## Bounding box:  xmin: -82.55071 ymin: 31.46925 xmax: -82.04858 ymax: 31.96618\n## Geodetic CRS:  WGS 84\n##   GEOID                    NAME                           geom\n## 1 13001 Appling County, Georgia MULTIPOLYGON (((-82.55069 3...\nmvc2 <- st_set_geometry(mvc, NULL)\n# look at the class of the original and the modified object\nclass(mvc)## [1] \"sf\"         \"data.frame\"\nclass(mvc2)## [1] \"data.frame\"\n# look at the first row and 1-2nd column after NULLing geom\nmvc2[1, 1:2]##   GEOID                    NAME\n## 1 13001 Appling County, Georgia"},{"path":"sf-overview.html","id":"st-as-sf","chapter":"Week 7 Tips for working with sf data class","heading":"7.2 st_as_sf()","text":"also times , inextricably, data set seems like sf object gets rejected function geometry information sf. Sometimes data manipulation steps strip away sf data class even though geom column still exists. happens can reinstate class status calling st_as_sf(). Essentially formal way declaring object sf explicitly defining spatial component.","code":""},{"path":"sf-overview.html","id":"st_crs","chapter":"Week 7 Tips for working with sf data class","heading":"7.3 st_crs()","text":"Spatial coordinate reference systems (CRS) projections critically important managing visualizing spatial data. spatial information sf object determined values coordinates contained geom geometry column, values assume known defined coordinate system. instance unprojected data typically measured degrees latitude longitude, even units can vary depending geodetic system datum used.know ’re working ? function st_crs() return whatever information stored object CRS/projection.recent version sf, returned st_crs() two pieces information:first piece labeled User input: case reads WGS 84, suggesting object based datum CRS.second piece information labeled wkt: stands Well-Known Text. standardized structured format describing annotating coordinate/projection information. detail probably want structure WKT CRS . short includes features:base datum underlying ellipsoid, case WGS 84Specific parameters including prime meridian, coordinate systemThe ID, often represented EPSG code.fact object mvc EPSG code 4326 suggests simple, unprojected, WGS-84 CRS (e.g. see ).Occasionally WKT complex, perhaps previous transformations stored metadata encoded WKT. case, closer examination WKT may needed identify CRS/projection. instance TARGETCRS mentioned? may current CRS.","code":"\nst_crs(mvc)## Coordinate Reference System:\n##   User input: WGS 84 \n##   wkt:\n## GEOGCRS[\"WGS 84\",\n##     DATUM[\"World Geodetic System 1984\",\n##         ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n##             LENGTHUNIT[\"metre\",1]]],\n##     PRIMEM[\"Greenwich\",0,\n##         ANGLEUNIT[\"degree\",0.0174532925199433]],\n##     CS[ellipsoidal,2],\n##         AXIS[\"geodetic latitude (Lat)\",north,\n##             ORDER[1],\n##             ANGLEUNIT[\"degree\",0.0174532925199433]],\n##         AXIS[\"geodetic longitude (Lon)\",east,\n##             ORDER[2],\n##             ANGLEUNIT[\"degree\",0.0174532925199433]],\n##     USAGE[\n##         SCOPE[\"Horizontal component of 3D system.\"],\n##         AREA[\"World.\"],\n##         BBOX[-90,-180,90,180]],\n##     ID[\"EPSG\",4326]]"},{"path":"dplyr.html","id":"dplyr","chapter":"Week 8 Tips for using dplyr","heading":"Week 8 Tips for using dplyr","text":"handy resources detail wrangling dplyr tidyr:dplyr overviewData transformation dplyr cheat sheetEpidemiologists R Handbook - tidy dataAs case many software packages, always one way get something done R! Base-R tools can accomplish kinds tasks, sometimes cumbersome inefficient.use R epidemiologists focused tools data science, might find diverse continually evolving tidyverse great toolbox explore. Originated Hadley Wickham (founder RStudio), packages constituting tidyverse now contributed lots different people. common interest handling data tidy ways. R Data Science authoritative guide tidy data, many tools constituting tidyverse including ggplot2, dplyr .appendix brief introduction dplyr package set data manipulation functions. words epidemiologists’ go-package data manipulation, recoding, preparation R.two high-level observations use dplyr semester:dplyr functions can thought verbs. means one tool act data, producing change. question “want change?”Functions dplyr (many parts tidyverse matter) can stand alone code. alternatively can chained together sequence. chaining (called piping tool connect chain steps called pipe looks like : %>%) can make code easier humans read, also helps run sequence steps efficiently.examples , use Georgia motor vehicle crash mortality dataset unit observation (e.g. content one row data) Georgia county, columns variable names. dataset also explicitly spatial meaning includes geography information regarding boundaries county, contained geom column, typical sf class data R.first rows dataset looks like (minus geom column):","code":"## Reading layer `ga_mvc' from data source \n##   `C:\\Users\\mkram02\\OneDrive - Emory University\\EPI563-Spatial Epi\\SpatialEpi-2021\\DATA\\GA_MVC\\ga_mvc.gpkg' \n##   using driver `GPKG'\n## Simple feature collection with 159 features and 17 fields\n## Geometry type: MULTIPOLYGON\n## Dimension:     XY\n## Bounding box:  xmin: -85.60516 ymin: 30.35785 xmax: -80.83973 ymax: 35.00066\n## Geodetic CRS:  WGS 84##   GEOID                     NAME   variable estimate          County\n## 1 13001  Appling County, Georgia B00001_001     1504  Appling County\n## 2 13003 Atkinson County, Georgia B00001_001      875 Atkinson County\n## 3 13005    Bacon County, Georgia B00001_001      945    Bacon County\n## 4 13007    Baker County, Georgia B00001_001      390    Baker County\n## 5 13009  Baldwin County, Georgia B00001_001     2943  Baldwin County\n## 6 13011    Banks County, Georgia B00001_001     1767    Banks County\n##   MVCDEATHS_05 MVCDEATHS_14 MVCDEATH_17 TPOP_05 TPOP_14 TPOP_17\n## 1            4            4          10   17769   18540   18521\n## 2            5            1           3    8096    8223    8342\n## 3            7            5           0   10552   11281   11319\n## 4            1            1           1    3967    3255    3200\n## 5            6            8          13   46304   45909   44906\n## 6            4            8           6   16683   18295   18634\n##   NCHS_RURAL_CODE_2013    nchs_code     rural MVCRATE_05 MVCRATE_14 MVCRATE_17\n## 1                    6     Non-core     Rural   22.51111   21.57497   53.99276\n## 2                    6     Non-core     Rural   61.75889   12.16101   35.96260\n## 3                    6     Non-core     Rural   66.33813   44.32231    0.00000\n## 4                    4  Small metro non-Rural   25.20797   30.72197   31.25000\n## 5                    5 Micropolitan non-Rural   12.95784   17.42578   28.94936\n## 6                    6     Non-core     Rural   23.97650   43.72779   32.19921"},{"path":"dplyr.html","id":"select","chapter":"Week 8 Tips for using dplyr","heading":"8.1 select()","text":"first verb dplyr called select() useful want remove select specific columns/variables. instance, mentioned dataset 17 attribute columns plus geom column. perhaps need three variables, decided easier exclude unneeded variables? can select() want (inversely can select don’t want).three useful tips using select() spatial data:select variables keep simply list (e.g. select(data, var1, var2, var3))easier omit specific variables (e.g. perhaps 100 variables want drop 3), place negative sign name (e.g. select(data, -var5, -var6)).Finally, something specific working sf spatial data geometry column (typically named geom geometry) sticky. means ’s hard get rid . ’s actually good thing. usually want geometry stick attribute data. occasionally might want convert spatial sf data object aspatial data.frame. must first set geometry null like : aspatial.df <- st_set_geometry(spatial.df, NULL). See additional info .Let’s motor vehicle crash data.","code":"\n# First we read in the dataset, which is stored as a geopackage\nmvc <- st_read('GA_MVC/ga_mvc.gpkg')\n\n# Look at column names\nnames(mvc)\n\n# For this example we do not want the geom column because it is too big to view\nmvc2 <- st_set_geometry(mvc, NULL)\n\n# Creating a new object with only 4 attributes\nmvc2 <- select(mvc2, GEOID, NAME, rural, MVCRATE_05, MVCRATE_17)\n\n# look at column names\nnames(mvc2)##  [1] \"GEOID\"                \"NAME\"                 \"variable\"            \n##  [4] \"estimate\"             \"County\"               \"MVCDEATHS_05\"        \n##  [7] \"MVCDEATHS_14\"         \"MVCDEATH_17\"          \"TPOP_05\"             \n## [10] \"TPOP_14\"              \"TPOP_17\"              \"NCHS_RURAL_CODE_2013\"\n## [13] \"nchs_code\"            \"rural\"                \"MVCRATE_05\"          \n## [16] \"MVCRATE_14\"           \"MVCRATE_17\"           \"geom\"## [1] \"GEOID\"      \"NAME\"       \"rural\"      \"MVCRATE_05\" \"MVCRATE_17\""},{"path":"dplyr.html","id":"mutate","chapter":"Week 8 Tips for using dplyr","heading":"8.2 mutate()","text":"Another frequently needed verb called mutate() might guess changes data. Specifically mutate() function creating new variable, possibly recode older variable. mvc data object 159 rows (one n=159 counties).Let’s imagine wanted create map illustrated magnitude change rate death motor vehicle crashes 2005 2017. want create two new variables name delta_mr_abs (absolute difference rates) delta_mr_rel (relative diference rates).look help documentation mutate() ’ll see first argument input dataset, case mvc. anywhere one zillion different ‘recode’ steps can included inside parentheses, separated comma. , created two new variables, one representing absolute representing relative difference rates two years.can look first rows selected columns see new variables:","code":"\n# Now we make a new object called mvc2\nmvc3 <- mutate(mvc2, \n               delta_mr_abs = MVCRATE_05 - MVCRATE_17,\n               delta_mr_rel = MVCRATE_05 / MVCRATE_17)\nhead(mvc3)##   GEOID                     NAME     rural MVCRATE_05 MVCRATE_17 delta_mr_abs\n## 1 13001  Appling County, Georgia     Rural   22.51111   53.99276   -31.481650\n## 2 13003 Atkinson County, Georgia     Rural   61.75889   35.96260    25.796294\n## 3 13005    Bacon County, Georgia     Rural   66.33813    0.00000    66.338135\n## 4 13007    Baker County, Georgia non-Rural   25.20797   31.25000    -6.042034\n## 5 13009  Baldwin County, Georgia non-Rural   12.95784   28.94936   -15.991517\n## 6 13011    Banks County, Georgia     Rural   23.97650   32.19921    -8.222703\n##   delta_mr_rel\n## 1    0.4169284\n## 2    1.7173090\n## 3          Inf\n## 4    0.8066549\n## 5    0.4476038\n## 6    0.7446303"},{"path":"dplyr.html","id":"filter","chapter":"Week 8 Tips for using dplyr","heading":"8.3 filter()","text":"select() choosing columns keep drop, filter() choosing rows keep drop. familiar SAS, filter() statement might .Imagine wanted map urban counties, omit rural counties. defining filtering rule. rule logical statement (e.g. relationship can tested data return TRUE FALSE).create new dataset, mvc4 created mvc3 restricted non-Rural counties:can see original object (mvc3) 159 rows, filtered object (mvc4) 102, reflecting number non-Rural counties Georgia.Although example used one filtering rule (e.g. keep rows rural == 'non-Rural'), construct complex filter including several different logical tests within filter() function, separated comma. instance filter non-rural counties population 100,000 specified region state, assuming variables indicating values.","code":"\nmvc4 <- filter(mvc3, rural == 'non-Rural')\n\n\ndim(mvc3) # dimensions (rows, columns) of the mvc3 object## [1] 159   7\ndim(mvc4) # dimensions (rows, columns) of the restricted mvc4 object## [1] 102   7"},{"path":"dplyr.html","id":"arrange","chapter":"Week 8 Tips for using dplyr","heading":"8.4 arrange()","text":"Occasionally might want sort dataset, perhaps find lowest highest values variable, group like values together. Sorting dplyr uses arrange() verb. default, data arranged ascending order (either numerical alphabetical character variables), can also choose descending order :","code":"\nmvc5 <- arrange(mvc3, desc(MVCRATE_17))\n\nhead(mvc5)##   GEOID                     NAME     rural MVCRATE_05 MVCRATE_17 delta_mr_abs\n## 1 13307  Webster County, Georgia     Rural   38.81988  115.16315    -76.34327\n## 2 13269   Taylor County, Georgia     Rural   22.57336   73.69197    -51.11860\n## 3 13165  Jenkins County, Georgia     Rural   47.00353   57.03205    -10.02853\n## 4 13001  Appling County, Georgia     Rural   22.51111   53.99276    -31.48165\n## 5 13087  Decatur County, Georgia non-Rural   18.17455   52.40305    -34.22851\n## 6 13191 McIntosh County, Georgia non-Rural   16.11863   49.62427    -33.50564\n##   delta_mr_rel\n## 1    0.3370859\n## 2    0.3063205\n## 3    0.8241598\n## 4    0.4169284\n## 5    0.3468223\n## 6    0.3248135"},{"path":"dplyr.html","id":"pipe-operator","chapter":"Week 8 Tips for using dplyr","heading":"8.5 %>% Pipe operator","text":"Everything ’ve done now one step time, created five different datasets avoid overwriting original. one source coding efficiency R comes careful chaining piping together multiple steps.every verb required input dataset first argument, chain steps, functions take output previous step input current step. example code chunk everything one step:practice, takes experience write whole chain steps want. often go iteratively, adding one step time checking step expected.","code":"\nmvc6 <- mvc %>%\n  st_set_geometry(NULL) %>%                             # remove geom column\n  select(GEOID, NAME, rural, MVCRATE_05, MVCRATE_17) %>%# select target variables\n  mutate(delta_mr_abs = MVCRATE_05 - MVCRATE_17,        # recode variables\n        delta_mr_rel = MVCRATE_05 / MVCRATE_17) %>%\n  filter(rural == 'non-Rural') %>%                      # filter (restrict) rows\n  arrange(desc(MVCRATE_17))                             # sort by MVCRATE_17\n\ndim(mvc6)## [1] 102   7\nhead(mvc6)##   GEOID                      NAME     rural MVCRATE_05 MVCRATE_17 delta_mr_abs\n## 1 13087   Decatur County, Georgia non-Rural   18.17455   52.40305   -34.228506\n## 2 13191  McIntosh County, Georgia non-Rural   16.11863   49.62427   -33.505640\n## 3 13033     Burke County, Georgia non-Rural   34.87510   39.96093    -5.085824\n## 4 13189  McDuffie County, Georgia non-Rural   18.67501   37.21276   -18.537756\n## 5 13055 Chattooga County, Georgia non-Rural   11.76194   36.33428   -24.572337\n## 6 13227   Pickens County, Georgia non-Rural   29.32874   34.82335    -5.494612\n##   delta_mr_rel\n## 1    0.3468223\n## 2    0.3248135\n## 3    0.8727301\n## 4    0.5018442\n## 5    0.3237147\n## 6    0.8422147"},{"path":"dplyr.html","id":"group_by-and-summarise","chapter":"Week 8 Tips for using dplyr","heading":"8.6 group_by() and summarise()","text":"dplyr verb can incredibly important spatial epidemiology combination group_by() summarise(). two used aggregate summarize data. instance data arranged individual persons unit analysis (e.g. 1 person = 1 row data), wanted aggregate got counts per census tract, use group_by() arrange rows groups defined census tract, use summarise() calculation (e.g. count, mean, sum, etc) separately group.important feature sf data objects operated dplyr verbs, built functionality handle geography/geometry data. instance, imagine wanted create map aggregated rural counties separately non-rural counties.can see (might predicted), aggregation changed dataset 159 rows 2 rows: one row rural one non-rural. Let’s see spatial data first mapping original data, mapping aggregated data. Read qtm()) tmap functions.dplyr verbs (e.g. mutate(), select(), filter()), constrained using group_by() single variable. Returning example individual observations nested within census tracts, use new_data <- individ_data %>% group_by(gender, year, tract) create file row data unique stratum gender * year * census tract.may see message R console run group_by() followed summarise() says something like summarise() ungrouping output override .groups argument. telling R automatically ungrouped data. specifically removed grouping last group_by() variable, avoid unintended consequences persistent grouping. group_by() two variables drops last grouping*, grouping may persist. grouping can removed adding ungroup() summarise().","code":"\nmvc7 <- mvc %>%\n  group_by(rural) %>%\n  summarise(avg_mr_17 = mean(MVCRATE_17))\n\nmvc7 %>% st_set_geometry(NULL)## # A tibble: 2 x 2\n##   rural     avg_mr_17\n## * <chr>         <dbl>\n## 1 non-Rural      18.8\n## 2 Rural          29.2\n# Using the qtm() function from tmap to create map of original data\nm1 <- qtm(mvc, 'MVCRATE_17')\n\n# Using the qtm() function from tmap package to create a map\nm2 <- qtm(mvc7, 'avg_mr_17')\n\ntmap_arrange(m1, m2)"},{"path":"dplyr.html","id":"join","chapter":"Week 8 Tips for using dplyr","heading":"8.7 join()","text":"Merging data common epidemiology, also prone many unintended consequences important pay attention options successful merges ‘table joins’ called parlance relational databases.challenges getting desired output merge join(), dplyr set verbs including: left_join(), right_join(), inner_join(), full_join() . documentation many ways join!join simply way merge two tables common key ID variable. purposes class want focus several key features joining important spatial analysis.explanation work two separate files: aspatial data.frame motor vehicle crash data called mvc.df; sf object U.S. counties, called us. unit analysis county, common ID key variable county FIPS code (named GEOID), different number rows:expected, mvc.df \\(n=159\\) counties makeup Georgia. However spatial/geography information \\(n=3220\\) rows, corresponding number U.S. counties territories.First, difference xxxx_join() two tables relate one another. purposes left_join() right_join() trick. difference: left_join() starts first object joins second. contrast right_join() starts second object joins first. mean?learn?number rows output dataset dictated two things:order objects written (e.g. case mvc.df always first us always second, contained within join())direction join. left_join() merge begins mvc.df, limits output 159 rows. contrast right_join() merge begins us, limits output 3220 rows.class output data depends object first. Notice left_join(), started aspatial data.frame, output also aspatial data.frame (although geom column now incorporated!). contrast right_join() put sf object us first, class sf.means merging joining think whether want rows data go output, ; think whether () can make sf object first.scenario , want \\(n=159\\) rows, thus want exclude non-Georgia counties. means must mvc.df first. Therefore, force object class sf like (also see info ):Joining Key/ID variables different namesSometimes common variable, county FIPS code, variable names different. example code , column storing unique county ID mvc.df named GEOID. However column sf object us stores unique county ID named FIPS. still possible use join() verbs relating (inside c() concatenation) order datasets introduced.","code":"\ndim(mvc.df)  # this is dimensions for the aspatial attribute data## [1] 159  17\ndim(us)      # this is dimensions for the spatial county polygon sf data## [1] 3220   10\n# left join, starting with mvc.df as the first object, us as the second\ntest.left <- mvc.df %>%\n  left_join(us, by = 'GEOID')\n\ndim(test.left)## [1] 159  26\nclass(test.left)## [1] \"data.frame\"\n# right join, starting with mvc.df as the first object\ntest.right <- us %>%\n  left_join(mvc.df, by = 'GEOID')\n\ndim(test.right)## [1] 3220   26\nclass(test.right)## [1] \"sf\"         \"data.frame\"\ntest.left <- mvc.df %>%\n  left_join(us, by = 'GEOID') %>%\n  st_as_sf()\n\ndim(test.left)## [1] 159  26\nclass(test.left)## [1] \"sf\"         \"data.frame\"\n# if us had the FIPS code stored in the column named 'FIPS'\ntest.left <- mvc.df %>%\n  left_join(us, by = c('GEOID' = 'FIPS'))"},{"path":"dplyr.html","id":"pivot_","chapter":"Week 8 Tips for using dplyr","heading":"8.8 Reshaping (transposing) data","text":"numerous intermediate advanced data manipulation options available dplyr tidyverse, outside scope course. One final verb represents sophisticated kind data change, however useful preparing spatial data. tools transpose reshape rectangular dataset wide long vice versa. Transposing useful , example, column disease rate several years (data wide), want dataset single column contains rate separate column indicates year (data long). article introduces notion pivoting data; can also review section R Data ScienceTwo related verbs help pivot tidy data one direction :","code":""},{"path":"dplyr.html","id":"pivot_longer-for-going-from-wide-to-long","chapter":"Week 8 Tips for using dplyr","heading":"8.8.1 pivot_longer() for going from wide to long","text":"Reviewing article linked previous paragraph (searching help documentation) give detail. example look take current mvc dataset, contains motor vehicle crash mortality rate county three different years (2005, 2014, 2017) separate columns (e.g. wide):mapping time-series often beneficial data long, say want data single column mvc_rate separate column year, can choose create map subset (defined year) data.First let’s look results, ’ll walk steps code chunk :can see, now 3 rows Appling County (GEOID 13001): one three years, different MVCRATE . long dataset. code work? step--step code chunk :first step create new object, mvc_long outcome steps piped together. input pipe original dataset, mvc.use as_tibble() current work around annoying ‘feature’ pivot_* functions don’t play well sf data classes. use as_tibble() essentially removing class designation, (making tibble tidy object); importantly different st_set_geometry(NULL) actually omits geometry column (e.g. see additional detail ).used select() pull variables interest, although leave variables desired.pivot_longer() can called several ways. way call , first specified columns pivot defining cols = argument variables start phrase MVCRATE. starts_with() another utility function dplyr. step told R columns wanted changed three called MVCRATE_05, MVCRATE_12 MVCRATE_17The names_to = argument defines column name new dataset delineate three variables (e.g. MVCRATE_05, etc). case wanted value year word MVCRATE_12. accomplish extra work:First, note used option names_sep = '_'. another utility function says want break string parts wherever designated separated (e.g. underscore, _) occurs. take column name MVCRATE_05 break underscore return two parts: MVCRATE 05.breaking two produce two answers, make two variable names names_to = hold . Thus names_to = c(\".value\", \"year\"). words column labeled .variable hold value MVCRATE column year hold value 05'.value' actually special value instance. way designating first part essentially junk. automatically discarded.values_to = 'mvcrate'. define name new dataset hold actual value (e.g. MVC mortality rate .)mutate() step just way take year fragment (e.g. 05, 12, 17) make calendar years first making numeric, simply adding 2000.final step, st_as_sf() manipulations actually removed objects designation class sf. Importantly, remove geom column, object recognized (e.g. tmap) spatial object. st_as_sf() simply declares fact sf.best way wrap head around start trying reshape transpose data hand. may need look additional help examples online, time become intuitive.see might gone work, use tm_facets() (read abouttmap_facets() ).","code":"\n# this code shows the first 6 rows (the head) of the relevant variables\nmvc %>% \n  st_set_geometry(NULL) %>%\n  select(GEOID, NAME, MVCRATE_05, MVCRATE_14, MVCRATE_17) %>%\n  head()##   GEOID                     NAME MVCRATE_05 MVCRATE_14 MVCRATE_17\n## 1 13001  Appling County, Georgia   22.51111   21.57497   53.99276\n## 2 13003 Atkinson County, Georgia   61.75889   12.16101   35.96260\n## 3 13005    Bacon County, Georgia   66.33813   44.32231    0.00000\n## 4 13007    Baker County, Georgia   25.20797   30.72197   31.25000\n## 5 13009  Baldwin County, Georgia   12.95784   17.42578   28.94936\n## 6 13011    Banks County, Georgia   23.97650   43.72779   32.19921\nmvc_long <- mvc %>%\n  select(GEOID, NAME, MVCRATE_05, MVCRATE_14, MVCRATE_17) %>%\n  as_tibble() %>%\n  pivot_longer(cols = starts_with(\"MVCRATE\"),\n               names_to = c(\".value\", \"year\"),\n               values_to = \"mvc_rate\",\n               names_sep = \"_\") %>%\n  mutate(year = 2000 + as.numeric(year)) %>%\n  st_as_sf()\nmvc_long %>%\n  st_set_geometry(NULL) %>%\n  head()## # A tibble: 6 x 4\n##   GEOID NAME                      year MVCRATE\n##   <chr> <chr>                    <dbl>   <dbl>\n## 1 13001 Appling County, Georgia   2005    22.5\n## 2 13001 Appling County, Georgia   2014    21.6\n## 3 13001 Appling County, Georgia   2017    54.0\n## 4 13003 Atkinson County, Georgia  2005    61.8\n## 5 13003 Atkinson County, Georgia  2014    12.2\n## 6 13003 Atkinson County, Georgia  2017    36.0\ntm_shape(mvc_long) +\n  \n  tm_fill('MVCRATE') + \n  tm_borders() +\ntm_facets(by = 'year')"},{"path":"dplyr.html","id":"pivot_wider","chapter":"Week 8 Tips for using dplyr","heading":"8.8.2 pivot_wider()","text":"course also possible go way, long wide. often easier. code return original shape:Take look output:appears returned 1 row per county. steps?, start removing class designation sf calling as_tibble()mutate() called re-create variable become column names.longer need old year variable omit select(-year)Finally pivot_wider() call arguments defining current variable contains informatino new column name (names_from =) current variable contains information population cells within column (values_from =).","code":"\nmvc_wide <- mvc_long %>%\n  as_tibble() %>%\n  mutate(my_var = paste0('MVCRATE ', year)) %>%\n  select(-year) %>%\n  pivot_wider(names_from = my_var,\n              values_from = MVCRATE) %>%\n  st_as_sf()\nmvc_wide %>%\n  st_set_geometry(NULL) %>%\n  head()## # A tibble: 6 x 5\n##   GEOID NAME                     `MVCRATE 2005` `MVCRATE 2014` `MVCRATE 2017`\n##   <chr> <chr>                             <dbl>          <dbl>          <dbl>\n## 1 13001 Appling County, Georgia            22.5           21.6           54.0\n## 2 13003 Atkinson County, Georgia           61.8           12.2           36.0\n## 3 13005 Bacon County, Georgia              66.3           44.3            0  \n## 4 13007 Baker County, Georgia              25.2           30.7           31.2\n## 5 13009 Baldwin County, Georgia            13.0           17.4           28.9\n## 6 13011 Banks County, Georgia              24.0           43.7           32.2"},{"path":"intro-tmap.html","id":"intro-tmap","chapter":"Week 9 Tips for using tmap","heading":"Week 9 Tips for using tmap","text":"Base-R capable data visualization plotting capabilities, fall short anything simple maps spatial data. Many packages including sp ggplot2 also functionality specifically optimized data visualization needs spatial epidemiologist. brief introductions packages.semester workhorse mapping/cartography tool tmap (thematic mapping) package. package builds grammar graphics logic built ggplot2 data visualizations conceived series layers information (e.g. axes, plot space, data points, lines, fill, legends, titles, etc) systematically stacked one top another. tmap start spatial object (e.g. data object either sf sp class) build visualization similarly combining adding together sequential layers., use data motor vehicle crash mortality dataset Georgia counties (vector polygon spatial data file), along information highways (vector line data file) trauma centers (vector point data).First load package, tmap browse help index:seeing range functions within tmap, import three datasets stored geopackage format begin visualizing:","code":"\n# load the tmap and sf packages\nlibrary(tmap)\nlibrary(sf)\n\nhelp('tmap')\n# import (read) three spatial datasets stored in geopackage format\nmvc <- st_read('GA_MVC/ga_mvc.gpkg')\nhwy <- st_read('GA_MVC/ga_hwy.gpkg')\ntrauma <- st_read('GA_MVC/trauma_centers.gpkg')"},{"path":"intro-tmap.html","id":"tmap-mode","chapter":"Week 9 Tips for using tmap","heading":"9.1 tmap mode","text":"One nice feature tmap two modes plotting maps. may develop general preference one another, although opinion serve slightly different purposes.plot mode produces conventional static maps viewed plot pane R-Studio, can saved file. main maps dissemination papers, posters, many presentations.view mode interactive plot html browser-like window. mode allows user interact map including panning, zooming, clicking spatial objects view underlying data. great data exploration, extensions web-served maps. However useful non-web-based dissemination want control map.select mode function tmap_mode() either 'plot' 'view' parentheses. Note set mode, subsequent maps mode…must re-submit tmap_mode() call switch back . default, tmap_mode() 'plot', means produces static maps. plot static maps, switch ’view' mode compare.","code":""},{"path":"intro-tmap.html","id":"qtm","chapter":"Week 9 Tips for using tmap","heading":"9.2 Quick maps: qtm()","text":"function qtm() stands Quick Thematic Maps, provides step simple plot() functions quickly plotting spatial objects. fundamental argument submitting qtm() name object plotted.produces geometry information (note unlike plot(), plot map every variable!).produce choropleth map (e.g. one objects shaded represent underlying statistic value), simply add name variable.Can tell legend cut-points determined? ’ll talk matters change later.Now try switching tmap_mode():Try things view mode:default visible R Studio Viewer pane; icon screen arrow allows show new window…biggerZoom outPanHover counties (see hovering?)Click counties (see click?)Underneath zoom + / - icon like stack papers. changes background map (background information change zoom /?)Click icon looks like stack pages. lets change background map (assuming currently connected internet)change back (like) :","code":"\nqtm(mvc)\nqtm(mvc, 'MVCRATE_05')\ntmap_mode('view')\ntmap_mode('plot')"},{"path":"intro-tmap.html","id":"customizing-qtm-for-polygons","chapter":"Week 9 Tips for using tmap","heading":"9.2.1 Customizing qtm() for polygons","text":"polygon data, might like control several features including title, color palette, style continuous variables categorized legend.syntax customizes original plot several ways:changing fill.style (style continuous variables categorized order plot sequential ramp choropleth map) default (fixed equal intervals) quantile style (default quantiles \\(n=5\\) quintiles although schemes including tertiles quartiles possible also)choosing custom color palette, case Yellow-Green-Blue (YlGnBu) palette, one several built-options.Providing informative title legend, rather default variable name.Notice label legend code “/n” inserted middle line. use forward slash creates called escape character. case “/n” inside character string inserts line break. “(2017)” line “MVC Mortality.”","code":"\nqtm(mvc,\n    fill = 'MVCRATE_17', \n    fill.style = 'quantile', \n    fill.palette = 'YlGnBu',\n    fill.title = 'MVC Mortality \\n(2017)')"},{"path":"intro-tmap.html","id":"customizing-qtm-for-lines","chapter":"Week 9 Tips for using tmap","heading":"9.2.2 Customizing qtm() for lines","text":"qtm() (tmap generally) can also handle types spatial data including line shape objects, can provide customization results. Try highway dataset:basic plot highways uses default colors sizes, plot uses lines.lwd= argument specify line width thickness. lines.col= sets color.","code":"\nqtm(hwy, \n    lines.lwd = 2, \n    lines.col = 'red')"},{"path":"intro-tmap.html","id":"customizing-qtm-for-points","chapter":"Week 9 Tips for using tmap","heading":"9.2.3 Customizing qtm() for points","text":"surprisingly, similar control point spatial objects, case locations trauma centers.symbols.size symbols.shape specified, symbolized variables modifying size shape. also settings color. study help documentation, notice arguments require numbers (thus use LEVEL_number integer) allow character/factors (thus use LEVEL).","code":"\nqtm(trauma,\n    symbols.size = 'LEVEL_number', \n    symbols.shape = 'LEVEL')"},{"path":"intro-tmap.html","id":"finding-valid-color-options","chapter":"Week 9 Tips for using tmap","heading":"9.2.4 Finding valid color options","text":"base R many ways specify colors including using standardized character strings, well HEX codes complicated alphanumeric labels used across industries identify unique colors. one many lists base-R color names: http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdfHowever mapping often want just single colors, reasonable sets colors symbolizing sequential values, categorical values, diverging values. coming weeks talk choose color style symbolizing maps. several sources finding effective color palettes spatial mapping. One best resources choosing color palette iw Color Brewer website.Another source color palettes actually built right tmap package (actually part add-package installed called tmaptools). tool actually directly derived Color Brewer site , helps make clear name palettes tmap.Occasionally next step caused session R crash. Therefore usually open second instance R Studio just next thing. simply go Session R Studio menu click New Session. creates another completely independent instance R Studio (e.g. none packages data loaded current session present new session unless specify ).use package name (tmaptools) followed double colon (::)? shortcut R lets call single function package without loading package. Basically says “go look package called tmaptools load specified function”. use shortcut (general, tmaptools) one two situations:function name two packages, specifying package identifies one mean. instance soon learn package dplyr function select() package also name function another package handling spatial data called raster. often use dplyr::select() disambiguate.situations like tmaptools::palette_explorer() really need one function currently need anything else package.may discover experimentation, tmaptools::palette_explorer() function actually small interactive app opens new window lets see array color palettes. can see divided sequential, divergent, categorical color ramps can move slider change many categories see color ranges. thing want explorer abbreviated names left color ramp.","code":"\ntmaptools::palette_explorer()"},{"path":"intro-tmap.html","id":"building-maps-with-tmap","chapter":"Week 9 Tips for using tmap","heading":"9.3 Building maps with tmap","text":"qtm() great quickly making map, want control map, want shift full functions tmap.","code":""},{"path":"intro-tmap.html","id":"building-blocks-in-tmap","chapter":"Week 9 Tips for using tmap","heading":"9.3.1 Building blocks in tmap","text":"tmap produces maps using grammar graphics approach means building final product ‘sum’ several fundamental components, plus possible options layers. three fundamental components maps tmap:Specify spatial object map using tm_shape().Following call tm_shape() generally specify layers wish symbolize map. words specifying shape doesn’t plot anything…just starting point. layers actual things object/shape plot. case polygons usually use tm_fill() specify layer fill polygon, although layers available (e.g. see base derived layers listed look help('tmap')).Finally, many instances want customize map layout features, title legend, might like add elements North arrow scale bar.given map, various layers steps connected together R code plus sign (+); highlights map sum many parts.NOTE: use pipe (%>%) plus (+) seemingly connect steps together ! perhaps unfortunate ggplot2 tmap use pipe dplyr. Beware choose correct connector function hand!pipe (%>%) links together separate functions. contrast plus (+) tmap ggplot2 add sub-parts instructions main function called.Note steps 1 2 can repeated many spatial objects wish layer. wanted put points lines top polygon shape, specify tm_shape() corresponding layers spatial object turn.code replicates first map qtm(), basically says, \"Start object mvc symbolize two layers: first fills polygons represent MVCRATE_17 second adds polygon borders:Look help documentation tm_fill() see myriad ways can customize map! ’s little overwhelming, ’d suggest looking style palette arguments, using -mentioned palette_explorer() try different colors different styles cut-points.","code":"\ntm_shape(mvc) +\n  tm_fill('MVCRATE_17') +\n  tm_borders()"},{"path":"intro-tmap.html","id":"customizing-text-on-maps","chapter":"Week 9 Tips for using tmap","heading":"9.3.2 Customizing text on maps","text":"several ways may wish customize text maps. example may want provide name legend, new labels categories, title, subtitle caption whole map.give title legend map use title = 'xxx' tm_fill() (layer function) call.change labels legendTo add source credits annotationThe tm_fill() option creates 5 bins categories plotting default. reason unnecessary put n = 5 specify many categories. However explicit number categories provide vector 5 labels correspond categories. course one choose non-default number categories (e.g. n = 3 n = 7), custom labels provided many labels categories.","code":"\n  # First, I create a vector of my custom legend labels\n  # (note, there must be same number of labels as there are categories in map)\nmyLabels <- c('Low (Q1)', 'Q2', 'Q3', 'Q4', 'Hi (Q5)')\n\ntm_shape(mvc) +\n  tm_fill('MVCRATE_17',\n          style = 'quantile',\n          title = 'MVC Rate in 2017',\n          n = 5, \n          labels = myLabels) +\n  tm_borders() +\ntm_layout(title = 'Motor Vehicle Crashes per capita in Georgia',\n          legend.outside = T) +\ntm_credits('Source: Georgia OASIS, retrieved 2019')"},{"path":"intro-tmap.html","id":"adding-two-or-more-spatial-objects-in-one-map","chapter":"Week 9 Tips for using tmap","heading":"9.3.3 Adding two or more spatial objects in one map","text":"Just like ArcGIS, additional spatial layers can added produce informative map. instance interested highways trauma centers related motor vehicle mortality rates add layers.Several things note code:three separate spatial objects plotted, called starting tm_shape() followed additional function specific layer. See help documentation, Tenekes article Canvas table layers available kinds shapes (e.g. polygons, points, lines).step added feature (e.g. call parentheses) connected together plus signsWithin step (e.g. within parentheses), arguments separated commasI organize code vertically think makes readable one line.Try changing arguments try substituting different options!","code":"\ntm_shape(mvc) + \n  tm_fill('MVCRATE_17',\n          style = 'quantile',\n          palette = 'Purples') +\n  tm_borders() +\n\ntm_shape(hwy) + \n  tm_lines(lwd = 2, col = 'red') +\n  \ntm_shape(trauma) + \n  tm_bubbles(shape = 'LEVEL',\n             col = 'pink')"},{"path":"intro-tmap.html","id":"controlling-layout-and-map-elements","chapter":"Week 9 Tips for using tmap","heading":"9.4 Controlling layout and map elements","text":"audience map , making look ‘just right’ may critical. However, creating map share colleagues, stakeholders, public, cartographic design important effective visual communication.tmap wide range tools customize way single map (even set maps) looks. fact many can feel overwhelming first. best advice use help documentation often, experiment lot! repeat help documentation completely, provide guidance several common layout needs options.Note focus examples static maps presented tmap_mode('plot'). Many options behave using interactive tmap_mode('view'), interactive html plots dynamically resize, formatting may differ. See ?tm_view() information options specific interactive mode.","code":""},{"path":"intro-tmap.html","id":"understanding-the-graphic-space-in-tmap","chapter":"Week 9 Tips for using tmap","heading":"9.4.1 Understanding the graphic space in tmap","text":"see discussion , many tools adjust size position elements fit way want, accomplish desired graphic layout. one recurring source frustration understanding parameters move parts graphical space. apparent, see plot really set nested plot spaces border margin width control.see can ‘turn ’ global option called design.mode using function tmap_options(). colorize different parts plot space, messaging names space. can help figure whether need control inner.margins, outer.margins move things panel overall plot space.example uses two-map plot illustrate information returned:see text output (interprets colors), actually several different plot spaces.device (yellow) means full extent output device, whether screen, .png .pdfouter.margins (indicated green) shows far edges plot area edge graphic devicemaster shape (indicated red) actual plotted map. see instructions adjusted inner.margins; margins distance red area blue area. want map smaller inside frame, use inner.margins shrink size red area","code":"\n# Turn 'on' the design.mode option\ntmap_design_mode(T)## design.mode: ON\n# Plot a map of two rates, side by side (e.g. see small multiples below)\ntm_shape(mvc) + \n  tm_fill(c('MVCRATE_05', 'MVCRATE_17'),\n          palette = 'Purples',\n          style = 'quantile') +\ntm_borders()## ----------------aspect ratios------------------------## | specified (asp argument of tm_layout)          NA |## | device (yellow)                         1.4000000 |## | device without outer margins (green)    1.4000000 |## | facets region (brown)                   1.7278757 |## | frame (blue)                            0.8639379 |## | master shape, mvc, (red)                0.8639379 |## -----------------------------------------------------\n# turn off the design.mode unless you want to see it on the next map you plot\ntmap_design_mode(F)## design.mode: OFF"},{"path":"intro-tmap.html","id":"controlling-map-layout","chapter":"Week 9 Tips for using tmap","heading":"9.4.2 Controlling map layout","text":"function tm_layout() controls title, margins, aspect ratio, colors, frame, legend, among many things. Type ?tm_layout() review help documentation see long list arguments can modify. Arguments via tm_layout() function incorporated map ‘adding’ (e.g. using + sign) tmap object, just add tm_fill() tm_borders().Explaining code :Aspects layout specified different steps:tm_fill() permits specification title legend. Notice inclusion \\n within title. noted , called escape character particular one forces line break/carriage return, let wrap title legend onto two linestm_borders() familiar, use alpha argument specify transparency borders, resulting lighter color. alpha parameter ranging 0 (fully transparent, invisible) 1 (transparency). can use alpha many different settings; useful maps many units (e.g. map U.S. counties) diminish visual impact boundaries using transparency.tm_layout() function many purposes, two things: add overall title map, adjust spacing inside frame line things fit:inner.margins controls big mapped figure relation overall frame; using argument way squish things around legend elements fit without bumping .\nargument expects vector four number going bottom, left, top, right\nvalues vector four numbers can range 0 1, representing relative amount space map object frame. use inner.margins = c(0.02, 0.02, 0.1, 0.2) means little extra space bottom left (0.02 ), extra space top (0.1) even right (0.2). arrived values trial error necessary keep legend bumping map.\nargument expects vector four number going bottom, left, top, rightThe values vector four numbers can range 0 1, representing relative amount space map object frame. use inner.margins = c(0.02, 0.02, 0.1, 0.2) means little extra space bottom left (0.02 ), extra space top (0.1) even right (0.2). arrived values trial error necessary keep legend bumping map.Explaining code :code differed three ways:used option request histogram legend, using legend.hist = T tm_fill() functionI moved entire legend outside frame specifying legend.outside = T tm_layout() function. Note addition shifting legend outside, can also control location using legend.position (changing location inside frame) legend.outside.position (controlling position outside frame).","code":"\n# Using tm_fill and tm_layout to control layout and text\ntm_shape(mvc) +\n  tm_fill('MVCRATE_17',\n          style = 'quantile',\n          palette = 'BuPu',\n          title = 'Deaths per 100,000, \\n2017') +\n  tm_borders(alpha = 0.2) +\n  tm_layout(main.title = 'Car crash mortality in Georgia',\n            inner.margins = c(0.02, 0.02, 0.1, 0.2))\n# Adding a histogram to the legend and moving the legend outside of the frame\ntm_shape(mvc) +\n  tm_fill('MVCRATE_17',\n          style = 'quantile',\n          palette = 'BuPu',\n          title = 'Deaths per 100,000, \\n2017',\n          legend.hist = T) +\n  tm_borders(alpha = 0.2) +\n  tm_layout(main.title = 'Car crash mortality in Georgia',\n            legend.outside = T)"},{"path":"intro-tmap.html","id":"adding-map-elements","chapter":"Week 9 Tips for using tmap","heading":"9.4.3 Adding map elements","text":"Finally, may wonder add map elements like north arrows, scale bars, captions, etc.extremely busy map many elements, illustrating features:","code":"\ntm_shape(mvc) +\n  tm_fill('MVCRATE_17',\n          style = 'quantile',\n          palette = 'BuPu',\n          title = 'Deaths per 100,000, \\n2017',\n          legend.hist = T) +\n  tm_borders(alpha = 0.2) +\n  tm_layout(main.title = 'Car crash mortality in Georgia',\n            legend.outside = T, \n            inner.margins = c(0.1, 0.02, 0.02, 0.1)) +\n  tm_compass(type = '4star', \n             size = 2,\n             position = c('right', 'top')) +\n  tm_scale_bar(position = c('left', 'bottom')) +\n  tm_credits('Source: Georgia OASIS') +\n  tm_grid(alpha = 0.2)"},{"path":"intro-tmap.html","id":"change-the-global-style-of-a-map","chapter":"Week 9 Tips for using tmap","heading":"9.4.4 Change the global style of a map","text":"tmap several pre-defined ‘styles’ ‘themes’ maps. may strategy chose epidemiologic maps, quick easy way achieve certain ‘feel’ map. style simply means set options preset (user can still modify individual elements) produce particular look. see examples global map produced using ten different styles, type tmap_style_catalog() console. computer took approximately 60-90 seconds produce ten separate .png files sub-folder project. can browse see styles differ. Two examples shown :\nFIGURE 9.1: tmap style: Natural\n\nFIGURE 9.2: tmap style: Classic\n","code":""},{"path":"intro-tmap.html","id":"making-small-multiple-maps","chapter":"Week 9 Tips for using tmap","heading":"9.5 Making small-multiple maps","text":"Small multiples refers production multiple maps presented set. often desire small multiples way visually compare two features easy put map.three ways prepare small multiples tmap. look , notice differ respect number legends produced, range legends, content flexibility customization within map panels.","code":""},{"path":"intro-tmap.html","id":"small-multiples-as-a-vector-of-variables","chapter":"Week 9 Tips for using tmap","heading":"9.5.1 Small multiples as a vector of variables","text":"plot side--side maps two variables spatial object, simply call vector variable names specifying layer symbolization.strategy produced single map variable listed vector, map unique legend, determined breaks data variable.","code":"\ntm_shape(mvc) + \n  tm_fill(c('MVCRATE_05', 'MVCRATE_17'),\n          palette = 'Purples',\n          style = 'quantile',\n          title = c('Mortality, 2005', 'Mortality, 2017')) +\n  tm_borders() +\n  tm_layout(inner.margins = c(0.02, 0.02, 0.1, 0.2),\n            legend.position = c('right', 'top'))"},{"path":"intro-tmap.html","id":"tmap-facet","chapter":"Week 9 Tips for using tmap","heading":"9.5.2 Small multiples with facets","text":"Facet plotting something common package ggplot2. refers production two plot figures stratified ‘grouping’ variable. Typically facet plots ggplot2, scale \\(x\\) \\(y\\) axis held constant across set plots values plotted readily comparable.tmap, facet plotting means creating multiple map plots distinguished slicing stratifying spatial units along group. Faceting can useful highlighting patterns among different sub-groups spatial data. Unlike ggplot2, scale legend bounds x, y coordinate extent enforced across panel maps default. Instead min/max x, y coordinates can vary according scope content panel (e.g. default, free.coords = T).default range cut-points legend held constant across maps (e.g. single legend produced represent data maps).like force consistency panels (e.g. either better contextualization comparability), can specified. Argument free.coords = FALSE (e.g. map min/max x, y coordinate range) free.scale=FALSE (e.g. map spatial scale ‘zoom’ appropriate contents panel).strange facet map produced stratifying NCHS urban/rural six-level categorization scheme. First code happens default, setting free.coords free.scales FALSE. can see default, map frame zooms maximize selected object, scale different . contrast forced maintain constant scale easier see relative size locations subset.","code":"\n# Basic facet map with defaults\ntm_shape(mvc) +\n  tm_fill('MVCRATE_17') +\n  tm_borders() +\n  tm_facets(by = 'nchs_code')\n# With facet parameters set to FALSE\ntm_shape(mvc) +\n  tm_fill('MVCRATE_17') +\n  tm_borders() +\n  tm_facets(by = 'nchs_code', free.coords = FALSE, free.scales = FALSE)"},{"path":"intro-tmap.html","id":"facets-for-time-series","chapter":"Week 9 Tips for using tmap","heading":"9.5.3 Facets for time-series","text":"small multiples vector--variables facets differ:One point, might obvious first, distinguishes first two methods small multiple map productions use data separate maps. Notice first option (supplying vector variables plot using c() call within tm_fill() example) good mapping things wide data. words maps separate columns different maps.contrast tm_facets() creates separate maps stratifying rows data. words good mapping things long data. used idea long versus wide data might seem confusing, relatively common distinction data handling.extension idea wanted map time-series (e.g. maps disease rates year series years), create long dataset year. Imagine dataset row data every county Year 1; separate dataset row data every county Year 2; . stacking datasets dataset becomes long number geographic units \\(\\times\\) number years. easily ArcGIS, perfectly allowable sf class spatial objects. plotting, simply use tm_facets() = YEAR produce series.example taking current ‘wide’ dataset (e.g. currently 3 years separate columns), making long dataset (e.g. single column MVCRATE, separate column year distinguish year-rate talking ). produce time-series faceted maps. case use tidy functionality pivot_* verbs (e.g. read use pivot verbs )Now, plot long sf object ignoring fact three rows data every county. Can tell happens?Notice maps ? Try changing YEAR == 2017 different year. can see ignored long format, tmap essentially plotted Georgia counties 3 times, last layer (e.g. 2017) top thus one see. beware…Now let’s take advantage long format dataset facet sub-divide dataset separate maps delineated year variable:","code":"\nnrow(mvc) # N = 159 rows corresponds to N=159 Georgia counties## [1] 159\nmvc_long <- mvc %>%\n  select(GEOID, NAME, MVCRATE_05, MVCRATE_14, MVCRATE_17) %>%\n  as_tibble() %>%\n  pivot_longer(cols = starts_with(\"MVCRATE\"),\n               names_to = c(\".value\", \"year\"),\n               values_to = \"mvc_rate\",\n               names_sep = \"_\") %>%\n  mutate(year = 2000 + as.numeric(year)) %>%\n  st_as_sf()\nnrow(mvc_long) # N =477 rows corresponds to 3 years each for N =159 counties  ## [1] 477\n# This is the WRONG way to plot a long dataset!\ntm_shape(mvc_long) +\n  tm_fill('MVCRATE') +\n  tm_borders()\n# If you want a single map from a long dataset, use the subset() function ...\ntm_shape(subset(mvc_long, year == 2017)) +\n  tm_fill('MVCRATE') +\n  tm_borders()\ntm_shape(mvc_long) +\n  tm_fill('MVCRATE') + \n  tm_borders() +\ntm_facets(by = 'year', ncol = 1)"},{"path":"intro-tmap.html","id":"small-multiples-with-tmap_arrange","chapter":"Week 9 Tips for using tmap","heading":"9.6 Small multiples with tmap_arrange()","text":"third way make small multiples, one gives maximum control separate panel, create one time, combining panel using function tmap_arrange(). notable difference name map object create , provide list names tmap_arrange().example used two totally different shape objects illustrate point tmap_arrange() particularly good combining things simply wide long subsets single dataset. approach also good taking totally different approach symbolizing two variables dataset, doesn’t assume trying keep anything .","code":"\nm1 <- tm_shape(mvc) +\n  tm_fill('MVCRATE_05') +\n  tm_borders()\n\nm2 <- tm_shape(trauma) +\n  tm_symbols(shape = 'LEVEL',\n             col = 'LEVEL')\n\ntmap_arrange(m1, m2)"},{"path":"intro-tmap.html","id":"summarizing-small-multiples","chapter":"Week 9 Tips for using tmap","heading":"9.7 Summarizing small multiples","text":"Small multiples common visualization GIS software like ArcGIS. small multiples need create multiple data frames manipulate Layout view; often difficult get consistent scales, legends, coordinates.R, idea faceting quite common much potential spatial epidemiology, emphasized . summarize overarching differences among three approaches future reference.","code":""},{"path":"intro-tmap.html","id":"saving-maps","chapter":"Week 9 Tips for using tmap","heading":"9.8 Saving maps","text":"Saving maps use programs applications important. Images can saved output formats available R image functions. words can save files .png, .pdf, .jpg, .tiff, etc.quick way use export button plot pane R studio.Recall way graphic R looks shaped part active graphic device. screen plot pane default graphic device things arranged look good screen. However save different graphic device (e.g. jpg device), things might look different. sometimes trial--error troubleshooting width, height, dpi options.specify save via code, rather export button (good idea terms reproducible code!) use tmap_save(). save final two-panel map created previous step :now skills make wide variety maps R. fine-tune tmap works customize desired purpose, likely spend lot time looking help documentation online resources. sometimes tedious, process figuring make just map want valuable. time able create sophisticated maps quickly efficiently.","code":"\n# First make it an object by giving it a name, m3\nm3 <- tmap_arrange(m1, m2)\n\ntmap_save(m3, filename = 'mvc_maps.png')"}]
