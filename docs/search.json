[{"path":"index.html","id":"how-to-use-this-ebook","chapter":"How to use this eBook","heading":"How to use this eBook","text":"Welcome Concepts & Applications Spatial Epidemiology (EPI 563)! eBook one several sources information support progress semester. overview course, expectations, learning objectives, assignments, grading, please review full course syllabus Canvas. eBook serves provide ‘jumping point’ content covered week. Specifically, content herein introduce key themes, new vocabulary, provide additional detail complementary asynchronous (pre-recorded) video lectures, foundational synchronous (class) work.","code":""},{"path":"index.html","id":"strategy-for-using-this-ebook","chapter":"How to use this eBook","heading":"Strategy for using this eBook","text":"separate module chapter week’s content. general, content within week’s section divided two sections focusing spatial thinking spatial analysis. dichotomy always hold, broad terms can expect sections specific content class Tuesday versus Thursday respectively.Spatial thinking epidemiology: section introduces vocabulary, concepts, themes important incorporation spatialized geo-referenced data epidemiologic work. minimum, plan read content prior class Tuesday, although likely benefit reading sections Tuesday.Spatial analysis epidemiology: section focused data management, visualization, spatial statistics, interpretation. content relevant work together Tuesday’s, essential successful work Thursday lab activities.Throughout book concepts ideas may highlighted call-blocks.block denotes potential pitfall area caution.block denotes additional bit information additional idea note topic hand.block denotes tip advice best practices efficiency.Please note continually updating eBook throughout semester, choose download, please double-check Last updated date sure recent version.\neBook licensed Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.","code":""},{"path":"software-installation.html","id":"software-installation","chapter":"Software installation","heading":"Software installation","text":"information module follows pre-class video setting R RStudio computer.","code":""},{"path":"software-installation.html","id":"installing-r-on-your-computer","chapter":"Software installation","heading":"Installing R on your computer","text":"August 2021, --date version R 4.1.1. R Project Statistical Computing continually working update improve R, result new versions 1-2 times per year.already R installed, can open console check current version : R.Version()$version.stringIf R older version listed , can install R going R repository: https://www.r-project.org/. Note many ‘mirrors’ servers software stored. Generally wise select one geographically close , although work theory. One mirror relatively close Atlanta : http://archive.linux.duke.edu/cran/","code":""},{"path":"software-installation.html","id":"installing-rstudio-on-your-computer","chapter":"Software installation","heading":"Installing RStudio on your computer","text":"current version RStudio 1.4.1717. RStudio version older 1.2 please install/update.INSTALL: go https://www.rstudio.com/products/rstudio/download/UPDATE: Open RStudio go Help Menu choose ‘Check Updates’","code":""},{"path":"installing-packages-for-this-course.html","id":"installing-packages-for-this-course","chapter":"Installing packages for this course","heading":"Installing packages for this course","text":"base R great deal essential functionality, power R comes rapidly growing list user-created contributed ‘packages.’ package simply bundle functions tools, sometimes also including example datasets, basic documentation, even tutorial ‘vignettes.’ can see official R packages going : https://cran.r-project.org/web/packages/.common way install package R install.packages() command. instance install package ggplot2 :install.packages(\"ggplot2\")Remember need install package (although may update packages occasionally – see green Update button Packages tab R Studio). want actually use package (example ggplot2) call like :library(ggplot2)call library() working, nothing visible happens. However see errors, might package date (thus needs updated/reinstalled), important dependencies missing. Dependencies packages package depends. Typically installed default, sometimes something missing. , simply install missing package try calling library(ggplot2) .Notice function install.packages('yourPackage') must use quotes around package name. contrast function library(youPackage) use quotes.submit installation request, note output R console. get warning says installation possible missing package ‘namespace’, suggests missing dependency (e.g. something main package needs work correctly). Try installing package mentioned error. trouble, reach TA’s!","code":""},{"path":"installing-packages-for-this-course.html","id":"installing-rtools40-windows-only","chapter":"Installing packages for this course","heading":"Installing Rtools40 (Windows Only)","text":"packages can installed mentioned (e.g. using install.packages()), instances installation requires complex ‘unpacking’ course code installation github. Mac OS Unix capability , Windows machine may require additional tools. Luckily package ! called Rtools40, install install packages .running Windows, navigate website: https://cran.r-project.org/bin/windows/Rtools/ follow instructions.","code":""},{"path":"installing-packages-for-this-course.html","id":"installing-packages-used-for-general-data-science","chapter":"Installing packages for this course","heading":"Installing packages used for general data science","text":"rest page, copy paste provided code order install packages necessary course. Notice hover right code-chunk html version eBook, see copy icon quick copying pasting.Although copying pasting code, take moment look output. get error messages package install? , re-check code try .packages support general work R:rmarkdown allows creation mixed output documents combine code, documentation results single, readable format.packages tinytex knitr necessary creating R documents including PDF output required submitting assignments.use many data manipulation tools tidyverse. can learn tidyverse : https://tidyverse.tidyverse.org/, can see applications tidyverse packages R Epidemiologists Handbook. tidyverse actually collection data science tools including visualization/plotting package ggplot2 data manipulation package dplyr. reason, install.packages('tidyverse') , actually installing multiple packages!packages pacman utilities help simplify file pathnames package loading behavior.","code":"\ninstall.packages('tidyverse')   \ninstall.packages(c('pacman', 'here'))\ninstall.packages(c('tinytex', 'rmarkdown', 'knitr')) \ntinytex::install_tinytex()  \n# this function installs the tinytex LaTex on your\n#  computer which is necessary for rendering (creating) PDF's "},{"path":"installing-packages-for-this-course.html","id":"installing-packages-use-for-geographic-data","chapter":"Installing packages for this course","heading":"Installing packages use for geographic data","text":"many ways get data want spatial epidemiology R. often (don’t always) use census geographies aggregating units, census populations denominators, following packages useful. designed quickly extract geographic boundary files (e.g. ‘shapefiles’) well attribute data US Census website via API. NOTE: work request free Census API key. Notice help() function get instructions .","code":"\ninstall.packages(c('tidycensus','tigris')) \n\nhelp('census_api_key','tidycensus')"},{"path":"installing-packages-for-this-course.html","id":"installing-packages-used-for-spatial-data-manipulation-visualization","chapter":"Installing packages for this course","heading":"Installing packages used for spatial data manipulation & visualization","text":"section installs set tools specific goals importing, exporting, manipulating, visualizing, analyzing spatial data.first line packages functions defining, importing, exporting, manipulating spatial data.second line tools use visualizing spatial data (e.g. making maps!).","code":"\ninstall.packages(c('sp', 'sf', 'rgdal', 'raster', 'RColorBrewer', 'rgeos', 'maptools', 'OpenStreetMap'))  \ninstall.packages(c('tmap', 'tmaptools', 'ggmap', 'shinyjs', 'shiny', 'micromap')) "},{"path":"installing-packages-for-this-course.html","id":"installing-packages-used-for-spatial-analysis","chapter":"Installing packages for this course","heading":"Installing packages used for spatial analysis","text":"Finally packages specifically spatial analysis tasks ’ll carry .","code":"\ninstall.packages(c('spdep', 'CARBayes', 'sparr', 'spatialreg',  'DCluster', 'SpatialEpi'))\ninstall.packages(c('GWmodel', 'spgwr') )"},{"path":"locating-spatial-epidemiology.html","id":"locating-spatial-epidemiology","chapter":"Week 1 Locating Spatial Epidemiology","heading":"Week 1 Locating Spatial Epidemiology","text":"","code":""},{"path":"locating-spatial-epidemiology.html","id":"getting-ready","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.1 Getting Ready","text":"","code":""},{"path":"locating-spatial-epidemiology.html","id":"learning-objectives","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.1.1 Learning objectives","text":"TABLE 1.1:  Learning objectives weekly module","code":""},{"path":"locating-spatial-epidemiology.html","id":"additional-resources","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.1.2 Additional Resources","text":"Geocompution R Robin Lovelace. recurring ‘additional resource’ provides lots useful insight strategy working spatial data R. encourage browse quickly now, return often qusetiona handle geogrpahic data (especially class sf) R.basic introduction ggplot2 package. just one dozens great online resources introducing grammar graphics approach plotting R.basic introduction tmap package also one many introductions tmap mapping package. tmap builds grammar graphics philosophy ggplot2, brings lot tools useful thematic mapping!","code":""},{"path":"locating-spatial-epidemiology.html","id":"important-vocabulary","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.1.3 Important Vocabulary","text":"TABLE 1.2:  Vocabulary Week 1","code":""},{"path":"locating-spatial-epidemiology.html","id":"spatial-thinking-in-epidemiology","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.2 Spatial Thinking in Epidemiology","text":"first learning epidemiology, can difficult distinguish concepts, theories, purpose epidemiology versus skills, tools, methods use implement epidemiology. distinctions foundational collective professional identity, way go work. instance think epidemiologists data analysts, scientists, data scientists, technicians something else? questions bigger can address class, importance becomes especially apparent learning area spatial epidemiology. tendency discourse spatial epidemiology focus primarily data methods without understanding relate scientific questions health population ultimately responsible. Distinguishing threads overarching goal course, even learn data science spatial analytic tools.One quite simplistic important example questions methods inter-related apparent think data. Data central quantitative analysis, including epidemiologic analysis. data different spatial epidemiology?first thing might come mind explicitly geographic spatial measures contained within data. content spatial data distinct: addition geographic spatial location may illuminate otherwise aspatial attributes. even fundamental content thinking unit analysis.likely many examples epidemiology coursework, explicit (sometimes implicit) unit analysis individual person. Spatial epidemiology can definitely align individual-level analysis. ’ll see, common units observe measure spatial epidemiology – therefore units compose much data – individuals instead geographic units (e.g. census tract, county, state, etc) extension collection aggregation individuals therein. distinction unit analysis important implications epidemiologic concerns including precision, bias, ultimately inference (e.g. meaning can make analysis), ’ll discuss throughout semester.One concrete implication discussion always able answer basic question dataset wish analyze: “one row data represent?” row data one way think unit analysis, often (always) spatial epidemiology row data summary population contained geographic unit boundary. Said another way ecologic summary population. stated , simplistic example important learn spatial statistics methods, also maintain perspective epidemiology population health science. advance public health need good methods also need critical understanding populations support, data analyze, conclusions can reliably draw work.move semester, encourage dig deep methods work, also step back ask questions like “choose method?” “question epidemiology useful ?”","code":""},{"path":"locating-spatial-epidemiology.html","id":"spatial-analysis-in-epidemiology","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.3 Spatial Analysis in Epidemiology","text":"","code":""},{"path":"locating-spatial-epidemiology.html","id":"spatial-data-storage-formats","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.3.1 Spatial data storage formats","text":"worked spatial GIS data using ESRI’s ArcMap, familiar called shapefiles. one common format storing geographic data computers. ESRI shapefiles actually single file, anywhere four eight different files file name different extensions (e.g. .shp, .prj, .shx, etc). different file (corresponding extension) contains different portion data ranging geometry data, attribute data, projection data, index connecting together, etc.may know shapefiles (opinion definitely best) way store geographic data. class recommend storing data format called geopackages indicated .gpkg extension. Geopackages open source format developed functional mobile devices. useful storing individual files efficient compact way. clear, many formats make claim geopackages ultimate format; just happen meet needs course, much work spatial epidemiologists. worth noting many GIS programs including ArcMap QGIS can read write geopackage format; constraint limitation terms software data stored .gpkg format.","code":""},{"path":"locating-spatial-epidemiology.html","id":"representing-spatial-data-in-r","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.3.2 Representing spatial data in R","text":"work course assumes basic R user; need expert, assume understand data objects (e.g. data.frame, list, vector), basic operations including subsetting index (e.g. using square brackets extract modify information: []), base-R plotting, simple modeling. familiar R, need quick self-directed learning.good online resources R skills, instructor TA’s can point additional resources needed:Epidemiologist R HandbookR Data Science, particularly introductory chaptersR TutorialJust conceptualization , thinking data spatial epidemiology requires reflection, actual structure representation data computer tool R also requires attention. Specifically, spatial data R exactly like conventional aspatial epidemiologic data often arranged rectangular data.frame (e.g. like spreadsheet rows observations columns variables). spatial data complex just spreadsheet, need complex spatial data software platforms like ESRI’s ArcMap.spatial, dataset must representation geography, spatial location, spatial relatedness, commonly done either vector raster data model (see description vocabulary). spatial geographic representations must stored computer /held memory, hopefully means relating associating individual locations corresponding attributes. example want know attribute (e.g. count deaths given place), location place, ideally want two connected together.past 10+ years, R increasingly used analyze visualize spatial data. Early , investigators tackling complexities spatial data analysis R developed number ad hoc, one-approaches data. worked short term specific applications, created new problems users needed generalize method new situation, chain together steps. settings uncommon convert dataset multiple different formats accomplish task sequence; resulted convoluted error-prone coding, lack transparency analysis.eventual response early tumult thoughtful systematic approach defining class data tackled unique challenges spatial data R. Roger Bivand, Edzer Pebesma others developed sp package defined spatial data classes, provided functional tools interact . sp package defined specific data classes hold points, lines, polygons, well raster/grid data; data classes can contain geometry (names like SpatialPoints SpatialPolygons) contain geometry plus related data attributes (names like SPatialPointsDataFrame SpatialPolygonsDataFrame). spatial object can contain information spatial data might include: spatial extent (min/max x, y values), coordinate system spatial projection, geometry information, attribute information, etc.flexibility power sp* class objects, became standard last years. Interestingly, perhaps sophistication sp* class began undermine . sp* class data well-designed programming point view, still little cumbersome (frankly confusing) applied analysts new users. Analysis spatial epidemiology primarily computer programming, producing transparent reliable data pipelines conduct valid, reliable, reproducible analysis. Thus epidemiologists, data scientists, desired spatial tools incorporated growing toolbox data science tools R.calls user-friendly intuitive approach spatial data led team (e.g. Bivand, Pebesma, others) develop *__S__imple __F__eatures* set spatial data classes R. Loaded sf package, data format quickly become standard handling spatial data R. power sf class, discussed , makes spatial data behave like rectangular data thus makes amenable manipulation using tool works data.frame tibble objects. Recognizing many users functions prefer older sp* objects, sf package includes number utility functions easily converting back forth.class use sf* class objects preferred data class, tools ’ll learn still require sp* occasionally go back forth.sf* data classes designed hold essential spatial information (projection, extent, geometry), easy evaluate data.frame format integrates attribute information geometry information together. result intuitive sorting, selecting, aggregating, visualizing.","code":""},{"path":"locating-spatial-epidemiology.html","id":"benefits-of-sf-data-classes","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.3.3 Benefits of sf data classes","text":"Robin Lovelace writes online eBook, Gecomputation R, sf data classes offer approach spatial data compatible QGIS PostGIS, important non-ESRI open source GIS platforms, sf functionality compared sp provides:Fast reading writing dataEnhanced plotting performancesf objects can treated data frames operationssf functions can combined using %>% pipe operator works well tidyverse collection R packages (see Tips using dplyr examples)sf function names relatively consistent intuitive (begin st_)","code":""},{"path":"locating-spatial-epidemiology.html","id":"working-with-spatial-data-in-r","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.3.4 Working with spatial data in R","text":"lab, one example dataset use, called ga.mvc quantifies counts rates death motor vehicle crashes Georgia’s \\(n=159\\) counties. dataset vector represents counties polygons associated attributes (e.g. mortality information, county names, etc).","code":""},{"path":"locating-spatial-epidemiology.html","id":"importing-spatial-data-into-r","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.3.4.1 Importing spatial data into R","text":"important distinguish two kinds data formats. way data stored computer hard drive, way data organized managed inside program like R. shapefiles (.shp) popularized ESRI/ArcMap example format storing spatial data hard drive. contrast, discussion sf* sp* data classes refer data organized inside R.Luckily, regardless data stored computer, possible import almost format R, inside R possible make either sp* sf* data class. means receive data .shp shapefile, .gpkg geopackage, .tif raster file, can easily imported.sf functions act spatial objects begin prefix st_. Therefore import (read) data use st_read(). function determines import data based extension file name specify. Look help documentation st_read(). Notice first argument dsn=, might complete file name (e.g. myData.shp), might folder name (e.g. mygeodatabase.gdb). motor vehicle crash data saved shapefile (mvc.shp, actually six different files computer), geopackage (mvc.gpkg) can read like :can take look defined data class imported objects within R:Notice two objects class (e.g. type data stored within R), even though two different kinds files stored computer: one shapefile one geopackage. st_read() can automatically detect storage format based extension, use appropriate interpreter import data. nice means can bring many types spatial data R!also notice examined class() object, classified sf data.frame class. incredibly important, speaks elegant simplicity sf* data classes! classified sf perhaps obvious spatial object; fact object also classified data.frame means can treat object purposes data management, manipulation analysis relatively simple-seeming object: rectangular data.frame. work? explore lab essentially dataset rows (observations) columns (variables).can see variable/column names like :can see dataset attribute variables (e.g. GEOID, NAME, MVCRATE_17), final column called geometry one called geom another.geometry columns different usual run---mill column variables don’t hold single value. Instead, ‘cell’ columns actually contains embedded list \\(x,y\\) coordinates defining vertices polygons Georgia’s counties. spatial location information row contained single variable called geom (alternately, geometry).Another way learn sf object use head() function. addition displaying top rows data (typical behavior head() function), sf objects head() also print important metadata file.summarize, sf within R powerful :limited data arrive us. acquire data (web, colleague, etc) shapefile, geopackage, raster formats, can imported R.inside R (stored sf data objects), can treat datasets almost aspatial, rectangular datasets. means use subsetting, filtering, recoding, merging, aggregating without losing spatial information!","code":"\n# this is the shapefile\nmvc.a <- st_read('GA_MVC/ga_mvc.shp')\n\n# this is the geopackage\nmvc.b <- st_read('GA_MVC/ga_mvc.gpkg')\nclass(mvc.a)## [1] \"sf\"         \"data.frame\"\nclass(mvc.b)## [1] \"sf\"         \"data.frame\"\nnames(mvc.a)## [1] \"GEOID\"      \"NAME\"       \"MVCRATE_17\" \"geometry\"\nnames(mvc.b)## [1] \"GEOID\"      \"NAME\"       \"MVCRATE_17\" \"geom\"\nhead(mvc.a)## Simple feature collection with 6 features and 3 fields\n## Geometry type: MULTIPOLYGON\n## Dimension:     XY\n## Bounding box:  xmin: -84.64195 ymin: 31.0784 xmax: -82.04858 ymax: 34.49172\n## Geodetic CRS:  WGS 84\n##   GEOID                     NAME MVCRATE_17                       geometry\n## 1 13001  Appling County, Georgia   53.99276 MULTIPOLYGON (((-82.55069 3...\n## 2 13003 Atkinson County, Georgia   35.96260 MULTIPOLYGON (((-83.141 31....\n## 3 13005    Bacon County, Georgia    0.00000 MULTIPOLYGON (((-82.62819 3...\n## 4 13007    Baker County, Georgia   31.25000 MULTIPOLYGON (((-84.64166 3...\n## 5 13009  Baldwin County, Georgia   28.94936 MULTIPOLYGON (((-83.42674 3...\n## 6 13011    Banks County, Georgia   32.19921 MULTIPOLYGON (((-83.66862 3..."},{"path":"locating-spatial-epidemiology.html","id":"exporting-spatial-data-from-r","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.3.4.2 Exporting spatial data from R","text":"importing often primary challenge spatial data R, uncommon might modify alter spatial dataset wish save future use, write disk share colleague. Luckily sf package functionality write sf spatial object disk wide variety formats including shapefiles (.shp) geopackages (.gpkg). , R uses extension specify filename determine target format.","code":"\n# Write the file mvc to disk as a shapefile format\nst_write(mvc, 'GA_MVC/ga_mvc_v2.shp')\n\n# Write the file mvc to disk as a geopackage format\nst_write(mvc, 'GA_MVC/ga_mvc_v2.gpkg')"},{"path":"locating-spatial-epidemiology.html","id":"basic-visual-inspectionplots","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.3.5 Basic visual inspection/plots","text":"want see spatial data? base-R powerful function called plot() can used create easy incredibly complex visualizations graphical representation data. package sf, functionality plot() extended handle uniqueness spatial data. means call plot() spatial object without loaded sf, results different plot() called loading sf.plot() sf, default try make map every variable data frame! Try . want (usually ), can force plot variables providing vector variable names.Sometimes want know something spatial size, extent, shape data. can easily plot geometry spatial object (e.g. attributes). two approaches quickly plot geometry:","code":"\nplot(mvc) # this plots a panel for every column - or actually the first 10 columns## Warning: plotting the first 9 out of 17 attributes; use max.plot = 17 to plot\n## all\nplot(mvc['MVCRATE_05']) # this plots only a single variable, the MVC mortality rate for 2005\nplot(mvc[c('MVCRATE_05', 'MVCRATE_17')]) # this plots two variables: MVC rate in 2005 & 2017\nplot(st_geometry(mvc)) # st_geometry() returns the geom information to plot\nplot(mvc$geom)  # this is an alternative approach...directly plot the 'geom' column"},{"path":"locating-spatial-epidemiology.html","id":"working-with-crs-and-projection","chapter":"Week 1 Locating Spatial Epidemiology","heading":"1.3.6 Working with CRS and projection","text":"Maps used describe geographical spatial location particular objects representation things planet Earth. maps printed paper screens. words, maps identify locations somewhere planet earth represent flat.world latitude longitude lines painted ground, earth flat! Instead earth nearly spherical (really geoid) universal reference start measuring.two reasons, maps require minimum coordinate reference system (CRS) define numbers coordinates relate actual places. addition maps best interpreted formally projecting data account artifact induced pretending earth flat.unambiguous way describe CRS /projection using EPSG code, stands European Petroleum Survey Group. consortium standardized hundreds projection definitions manner adopted several R packages including rgdal sf.given dataset already CRS (possibly projection). CRS projection information contained original file imported, usually maintained use st_read(). However sometimes missing must first find . known, might choose change transform CRS projection specific purpose. discuss class.CRS information imported critical find CRS information data source!course GIS course (e.g. assumed already exposure geographic information systems generally), learning theory application coordinate reference systems projections primary purpose semester. However basic knowledge necessary successfully working spatial epidemiologic data. several resources peruse learn CRS, projections, EPSG codes:useful overview/review coordinate reference systems RRobin Lovelace’s Geocompuation R projections sfEPSG website: link searchable database valid ESPG codesHere useful EPSG codes\nFIGURE 1.1: Comparing CRS\nchoice CRS /projection substantial impact rendered map looks, evident figure (source image).already saw CRS/projection information mvc object used head() function ; top read WGS 84.Recall two main types CRS: purely geographic say coordinate locations represented latitude longitude degrees; projected means coordinate values transformed representation spherical geoid onto planar (Euclidean) coordinate system. WGS 84 ubiquitous geographic coordinate system common boundary files retrieved U.S. Census bureau.important question work spatial dataset understand whether primarily geographic projected CRS, one.quick logical test returns TRUE FALSE answer question “sf object simply longitude/latitude geographic CRS?”. answer case TRUE WGS 84 geographic (longlat) coordinate system. FALSE wanted know CRS/projection?somewhat complicated looking output summary CRS stored spatial object. two things note output:top, User input WGS 84At bottom section labeled GEOGCRS says ID[\"EPSG\",4326\"]literally hundreds distinct EPSG codes describing different geographic projected coordinate systems, semester three worth remembering:EPSG: 4326 common geographic (unprojected long-lat) CRSEPSG: 3857 also called WGS 84/Web Mercator, dominant CRS used Google MapsEPSG: 5070 code projected CRS called Albers Equal Area benefit representing visual area maps equal manner.CRS/projection clearly defined, may choose transform project data different system. sf package another handy function called st_transform() takes spatial object (dtaaset) one CRS outputs object transformed new CRS.see difference three? EPSG 4326 3857 unprojected (e.g. long/lat), appear quite similar identical. Albers Equal Area, hand, distinct. general prefer use ‘projected’ rather ‘unprojected’ (long/lat ) data visualization analysis. means whenever bring new dataset need check CRS project transform desired.Important: important distinguish defining current projection data act projecting transforming data one known system new CRS/projection.transform data correctly define current original CRS/projection status. function tells us current status . cases data associated CRS information might completely blank (instance read numerical \\(x,y\\) points geocoding GPS process). cases can set underlying CRS using st_set_crs() define , assumes know . two arguments function: first x = objectName, second value = xxx ‘xxx’ valid EPSG code.","code":"\nst_is_longlat(mvc)## [1] TRUE\nst_crs(mvc)## Coordinate Reference System:\n##   User input: WGS 84 \n##   wkt:\n## GEOGCRS[\"WGS 84\",\n##     DATUM[\"World Geodetic System 1984\",\n##         ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n##             LENGTHUNIT[\"metre\",1]]],\n##     PRIMEM[\"Greenwich\",0,\n##         ANGLEUNIT[\"degree\",0.0174532925199433]],\n##     CS[ellipsoidal,2],\n##         AXIS[\"geodetic latitude (Lat)\",north,\n##             ORDER[1],\n##             ANGLEUNIT[\"degree\",0.0174532925199433]],\n##         AXIS[\"geodetic longitude (Lon)\",east,\n##             ORDER[2],\n##             ANGLEUNIT[\"degree\",0.0174532925199433]],\n##     USAGE[\n##         SCOPE[\"Horizontal component of 3D system.\"],\n##         AREA[\"World.\"],\n##         BBOX[-90,-180,90,180]],\n##     ID[\"EPSG\",4326]]\n# This uses the Albers equal area USA, \nmvc.aea <- st_transform(mvc, 5070)\n\n# This uses the Web Mercator CRS (EPSG 3857) which is just barely different from EPSG 4326\nmvc.wm <- st_transform(mvc, 3857)\n\n# Now let's look at them side-by-side\nplot(st_geometry(mvc), main = 'EPSG 4326')\nplot(st_geometry(mvc.wm), main = 'Web Mercator (3857)')\nplot(st_geometry(mvc.aea), main = 'Albers Equal Area (5070)')"}]
